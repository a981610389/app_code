webpackJsonp([1],{"+KKi":function(e,t){},0:function(e,t){},"3+cF":function(e,t){},"52gh":function(e,t){},E7yS:function(e,t){},GIm8:function(e,t){},Keoz:function(e,t){},MwO8:function(e,t){},NHnr:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n("xd7I"),i=n("oAG2"),s={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"console",class:{visibility:!e.showConsole}},[n("ul",{directives:[{name:"show",rawName:"v-show",value:e.showConsole,expression:"showConsole"}],staticClass:"console-header"},[n("li",{staticClass:"block active"},[e._v("Console")]),e._v(" "),n("li",{staticClass:"block"},[e._v("Network")])]),e._v(" "),n("div",{directives:[{name:"show",rawName:"v-show",value:e.showConsole,expression:"showConsole"}],staticClass:"console-main"},[n("ul",{attrs:{id:"console_main"}})]),e._v(" "),n("div",{directives:[{name:"show",rawName:"v-show",value:e.showConsole,expression:"showConsole"}],staticClass:"console-footer"},[n("p",{staticClass:"block"},[e._v(">")]),e._v(" "),n("input",{ref:"console_crarr",attrs:{type:"text"}}),e._v(" "),n("p",{staticClass:"block",staticStyle:{width:".4rem"},on:{click:e.oncrarr}},[e._v("↵")])]),e._v(" "),n("div",{staticClass:"console-box",style:{top:e.top,left:e.left},on:{touchstart:function(t){return t.stopPropagation(),t.preventDefault(),e.start(t)},touchmove:function(t){return t.stopPropagation(),t.preventDefault(),e.move(t)},touchend:function(t){return t.stopPropagation(),t.preventDefault(),e.end(t)}}},[n("div",{ref:"box_t",staticClass:"blueball1 block"},[n("span",{directives:[{name:"show",rawName:"v-show",value:e.showTxt,expression:"showTxt"}],on:{touchstart:function(t){e.showConsole=!1}}},[e._v("隐藏")])]),e._v(" "),n("div",{directives:[{name:"show",rawName:"v-show",value:e.clearb,expression:"clearb"}],ref:"box_b",staticClass:"blueball2 block"},[n("span",{directives:[{name:"show",rawName:"v-show",value:e.showTxt,expression:"showTxt"}],on:{touchstart:function(t){e.showConsole=!0}}},[e._v("显示")])])])])},staticRenderFns:[]};var o=function(e){n("+KKi")},r=n("C7Lr")(i.a,s,!1,o,null,null).exports,c=n("3cXf"),d=n.n(c),l=n("hRKE"),p=n.n(l),h=n("jMcx"),v=n.n(h),x=function(e,t){var n=void 0,a=void 0;switch(n="object"==(void 0===t?"undefined":p()(t))?d()(t):t,void 0===t?a=localStorage.getItem(e):localStorage.setItem(e,n),a){case"null":a=null;break;case"undefined":a=void 0;break;case"true":a=!0;break;case"false":a=!1;break;default:isNaN(+a)||(a=+a)}return a},m={name:"App",data:function(){return{msg:"Welcome to My App",showConsole:!1,left:"",right:""}},mounted:function(){this.showConsole=x("console")},methods:{setHead:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.msg=e.msg,this.left=e.leftCb,this.right=e.rightCb},leftBack:function(){this.left&&this.left(),this.left="","HelloWorld"==this.$route.name?document.location="js://webview?arg1=111&arg2=222":this.$router.go(-1)},backHome:function(){this.right&&this.right(),this.right="",this.$router.push({path:"/"})}},components:{con:r}},C={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{attrs:{id:"app"}},[n("div",{staticClass:"head"},[n("div",{staticClass:"head-center"},[n("div",{staticClass:"head-center-body"},[e._v(e._s(e.msg))])]),e._v(" "),n("div",{staticClass:"head-icon left",on:{click:e.leftBack}},[e._v("返回")]),e._v(" "),n("div",{staticClass:"head-icon right",on:{click:e.backHome}})]),e._v(" "),n("router-view",{attrs:{"set-head":e.setHead}}),e._v(" "),e.showConsole?n("con"):e._e()],1)},staticRenderFns:[]};var u=n("C7Lr")(m,C,!1,function(e){n("v+cG")},null,null).exports,g=n("N7LD"),f=n.n(g),y=n("7LQH"),k=n("OolZ"),_={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",{staticClass:"btn-list"},[n("li",{on:{click:function(t){return e.to("games")}}},[e._v("游戏")]),e._v(" "),n("li",{on:{click:function(t){return e.to("css")}}},[e._v("样式库")]),e._v(" "),n("li",{on:{click:function(t){return e.to("script")}}},[e._v("js库")]),e._v(" "),n("li",{on:{click:function(t){return e.to("canvas")}}},[e._v("Canvas")]),e._v(" "),n("li",{on:{click:function(t){return e.to("settings")}}},[e._v("设置")])])},staticRenderFns:[]};var b=n("C7Lr")({name:"HelloWorld",data:function(){return{}},mounted:function(){this.$parent.msg="首页"},methods:{to:function(e){this.$router.push({path:"/"+e})}}},_,!1,function(e){n("ncVE")},null,null).exports,D={render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",[t("svg",{staticStyle:{width:"100%",height:"4rem"},attrs:{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[t("path",{attrs:{id:"animate1"}}),this._v(" "),t("path",{attrs:{id:"animate2"}}),this._v(" "),t("path",{attrs:{id:"animate3"}}),this._v(" "),t("path",{attrs:{id:"animate4"}})])])},staticRenderFns:[]};var w=n("C7Lr")({name:"SvgDeformation",data:function(){return{}}},D,!1,function(e){n("q1kv")},null,null).exports,R={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var e=this.$createElement,t=this._self._c||e;return t("div",[t("ul",{staticClass:"btn-list"},[t("li")]),this._v("\n    下拉弹框(弹性)\n")])}]};var T=n("C7Lr")({name:"LayerComponent",data:function(){return{}}},R,!1,function(e){n("lH7g")},null,null).exports,I={name:"keyboard",props:["id","getInput","option"],data:function(){return{key:"#keyboard_"+this.id,flicker:!1,val:""}},created:function(){var e=['<div class="keyboard-main" id="keyboard_'+this.id+'" style="display:none;">','<div class="keyboard-layer">','<div class="keyboard-num" style="display: none;">','<div class="keyboard-num-left">','<p data-key="%"><span>%</span></p>','<p data-key="/"><span>/</span></p>','<p data-key="-"><span>-</span></p>','<p data-key="+"><span>+</span></p>',"</div>",'<ul class="keyboard-num-content">',"<li>",'<p data-key="1"><span>1</span></p>','<p data-key="2"><span>2</span></p>','<p data-key="3"><span>3</span></p>','<p class="gray" data-key="-1"><span>x</span></p>',"</li>","<li>",'<p data-key="4"><span>4</span></p>','<p data-key="5"><span>5</span></p>','<p data-key="6"><span>6</span></p>','<p class="gray" data-key=".">.</p>',"</li>","<li>",'<p data-key="7"><span>7</span></p>','<p data-key="8"><span>8</span></p>','<p data-key="9"><span>9</span></p>','<p class="gray" data-key="@"><span>@</span></p>',"</li>","</ul>","</div>",'<div class="keyboard-num-footer" style="display: none;">','<p class="gray" data-key="-2"><span>字母</span></p>','<p class="gray" data-key="-4"><span>符号</span></p>','<p data-key="0" class="keyboard-num-zero"><span>0</span></p>','<p class="gray" data-key="-5"><span class="keyboard-num-space"></span></p>','<p class="gray" data-key="-6"><span>&crarr;</span></p>',"</div>",'<ul class="keyboard-money" style="display: none;">',"<li>",'<p data-key="1"><span>1</span></p>','<p data-key="2"><span>2</span></p>','<p data-key="3"><span>3</span></p>',"</li>","<li>",'<p data-key="4"><span>4</span></p>','<p data-key="5"><span>5</span></p>','<p data-key="6"><span>6</span></p>',"</li>","<li>",'<p data-key="7"><span>7</span></p>','<p data-key="8"><span>8</span></p>','<p data-key="9"><span>9</span></p>',"</li>","<li>",'<p class="gray" data-key=".">.</p>','<p data-key="0"><span>0</span></p>','<p class="gray" data-key="-1"><span>x</span></p>',"</li>","</ul>",'<ul class="keyboard-letter" style="display: none;">','<li class="keyboard-lower">','<p data-key="q"><span>q</span></p>','<p data-key="w"><span>w</span></p>','<p data-key="e"><span>e</span></p>','<p data-key="r"><span>r</span></p>','<p data-key="t"><span>t</span></p>','<p data-key="y"><span>y</span></p>','<p data-key="u"><span>u</span></p>','<p data-key="i"><span>i</span></p>','<p data-key="o"><span>o</span></p>','<p data-key="p"><span>p</span></p>',"</li>",'<li class="keyboard-lower">','<p data-key="a"><span>a</span></p>','<p data-key="s"><span>s</span></p>','<p data-key="d"><span>d</span></p>','<p data-key="f"><span>f</span></p>','<p data-key="g"><span>g</span></p>','<p data-key="h"><span>h</span></p>','<p data-key="j"><span>j</span></p>','<p data-key="k"><span>k</span></p>','<p data-key="l"><span>l</span></p>',"</li>",'<li class="keyboard-lower">','<p class="gray" data-key="-7"><span>↑</span></p>','<p data-key="z"><span>z</span></p>','<p data-key="x"><span>x</span></p>','<p data-key="c"><span>c</span></p>','<p data-key="v"><span>v</span></p>','<p data-key="b"><span>b</span></p>','<p data-key="n"><span>n</span></p>','<p data-key="m"><span>m</span></p>','<p class="gray" data-key="-1"><span>x</span></p>',"</li>",'<li class="keyboard-capital">','<p data-key="Q"><span>Q</span></p>','<p data-key="W"><span>W</span></p>','<p data-key="E"><span>E</span></p>','<p data-key="R"><span>R</span></p>','<p data-key="T"><span>T</span></p>','<p data-key="Y"><span>Y</span></p>','<p data-key="U"><span>U</span></p>','<p data-key="I"><span>I</span></p>','<p data-key="O"><span>O</span></p>','<p data-key="P"><span>P</span></p>',"</li>",'<li class="keyboard-capital">','<p data-key="A"><span>A</span></p>','<p data-key="S"><span>S</span></p>','<p data-key="D"><span>D</span></p>','<p data-key="F"><span>F</span></p>','<p data-key="G"><span>G</span></p>','<p data-key="H"><span>H</span></p>','<p data-key="J"><span>J</span></p>','<p data-key="K"><span>K</span></p>','<p data-key="L"><span>L</span></p>',"</li>",'<li class="keyboard-capital">','<p class="gray" data-key="-7"><span>↑</span></p>','<p data-key="Z"><span>Z</span></p>','<p data-key="X"><span>X</span></p>','<p data-key="C"><span>C</span></p>','<p data-key="V"><span>V</span></p>','<p data-key="B"><span>B</span></p>','<p data-key="N"><span>N</span></p>','<p data-key="M"><span>M</span></p>','<p class="gray" data-key="-1"><span>x</span></p>',"</li>","<li>",'<p class="gray" data-key="-3"><span>123</span></p>','<p data-key=",">,</p>','<p data-key="-5"><span class="keyboard-num-space"></span></p>','<p data-key=".">.</p>','<p class="gray" data-key="-6"><span>&crarr;</span></p>',"</li>","</ul>",'<ul class="keyboard-symbol" style="display: none;">',"<li>",'<p data-key="@"><span>@</span></p>','<p data-key="#"><span>#</span></p>','<p data-key="$"><span>$</span></p>','<p data-key="%"><span>%</span></p>','<p data-key="^"><span>^</span></p>','<p data-key="&"><span>&</span></p>','<p data-key="*"><span>*</span></p>','<p data-key="("><span>(</span></p>','<p data-key=")"><span>)</span></p>',"</li>","<li>",'<p data-key="-"><span>-</span></p>','<p data-key="+"><span>+</span></p>','<p data-key="_"><span>_</span></p>','<p data-key="="><span>=</span></p>','<p data-key="["><span>[</span></p>','<p data-key="]"><span>]</span></p>','<p data-key="|"><span>|</span></p>','<p data-key="\\"><span>\\</span></p>','<p data-key=":"><span>:</span></p>',"</li>","<li>",'<p data-key="↑"><span>↑</span></p>','<p data-key=";"><span>;</span></p>','<p data-key="""><span>"</span></p>',"<p data-key=\"'\"><span>'</span></p>",'<p data-key=","><span>,</span></p>','<p data-key="."><span>.</span></p>','<p data-key="/"><span>/</span></p>','<p data-key="?"><span>?</span></p>','<p data-key="~"><span>~</span></p>',"</li>","<li>",'<p class="gray" data-key="-3"><span>123</span></p>','<p data-key="♂">♂</p>','<p data-key="-5"><span class="keyboard-num-space"></span></p>','<p data-key="♀">♀</p>','<p class="gray" data-key="-6"><span>&crarr;</span></p>',"</li>","</ul>","</div>","</div>"].join("");f()(this.key).length<=0&&(f()("body").append(e),this.onEvent())},mounted:function(){this.initAttribute()},methods:{showBoard:function(){f()(this.key).show().find(".keyboard-num,.keyboard-num-footer").show(),this.$nextTick(function(){this.showType()})},onEvent:function(){var e=this,t=void 0,n=(new Date,this.option.max||10),a=!1;f()(this.key).on("touchstart",function(n){t=null,f()(n.target).parents(".keyboard-num,.keyboard-num-footer,.keyboard-money,.keyboard-letter,.keyboard-symbol").length>0||f()(n.target).hasClass("keyboard-num-footer")||f()(n.target).hasClass("keyboard-num")||f()(n.target).hasClass("keyboard-money")||f()(n.target).hasClass("keyboard-letter")||f()(n.target).hasClass("keyboard-symbol")?("P"==n.target.nodeName&&(t=f()(n.target)),"P"==f()(n.target).parent()[0].nodeName&&(t=f()(n.target).parent()),t&&t.addClass("touch")):(f()(e.key).hide(),e.flicker=!1)}),f()(this.key).on("touchend",function(i){if(t){var s=t.data("key");t.removeClass("touch");var o=void 0,r=void 0;if(e.val.length>=n&&-1!=s&&-2!=s&&-3!=s&&-4!=s&&-7!=s)return;switch(s){case-1:(o=e.val.split("")).pop(),r=o.join(""),e.val=r;break;case-2:e.option.type="letter",e.showType();break;case-3:e.option.type="number",e.showType();break;case-4:e.option.type="symbol",e.showType();break;case-5:e.val+=" ";break;case-6:e.val+="\n";break;case-7:a?(a=!1,f()(e.key).removeClass("active")):(a=!0,f()(e.key).addClass("active"));break;default:e.val+=s}e.getInput(e.val)}})},showType:function(){this.flicker=!0,"number"==this.option.type&&(f()(this.key).find(".keyboard-money,.keyboard-letter,.keyboard-symbol").hide(),f()(this.key).find(".keyboard-num,.keyboard-num-footer").show()),"money"==this.option.type&&(f()(this.key).find(".keyboard-num,.keyboard-num-footer,.keyboard-letter,.keyboard-symbol").hide(),f()(this.key).find(".keyboard-money").show()),"letter"==this.option.type&&(f()(this.key).find(".keyboard-num,.keyboard-num-footer,.keyboard-money,.keyboard-symbol").hide(),f()(this.key).find(".keyboard-letter").show()),"symbol"==this.option.type&&(f()(this.key).find(".keyboard-num,.keyboard-num-footer,.keyboard-money,.keyboard-letter").hide(),f()(this.key).find(".keyboard-symbol").show())},initAttribute:function(){this.option.class&&f()(this.$refs.keyboard_box).addClass(this.option.class),this.option.style&&f()(this.$refs.keyboard_box).css(this.option.style)},clear:function(){this.val=""}},computed:{},watch:{val:function(e){return this.$nextTick(function(){this.$refs.keyboard_input.scrollLeft=1e3}),e}}},P={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{ref:"keyboard_box",staticClass:"kb-box"},[n("div",{staticClass:"block kb-tem",on:{click:e.showBoard}},[n("span",{ref:"keyboard_input",staticClass:"kb-input"},[e._v(e._s(e.val))]),e._v(" "),n("i",{directives:[{name:"show",rawName:"v-show",value:e.flicker,expression:"flicker"}],staticClass:"kb-flicker"}),e._v(" "),n("div",{directives:[{name:"show",rawName:"v-show",value:e.val>0||e.val.length>0,expression:"val>0||val.length>0"}],staticClass:"kb-clear block"})])])},staticRenderFns:[]};var M={name:"InputeComponent",data:function(){return{option:{type:"number"},option2:{type:"money",style:{width:"50%",height:".5rem"}}}},mounted:function(){this.$parent.msg="输入框"},methods:{getInput:function(e){}},components:{keyboard:n("C7Lr")(I,P,!1,function(e){n("GIm8")},null,null).exports}},E={render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",[t("keyboard",{attrs:{id:"1","get-input":this.getInput,option:this.option}}),this._v(" "),t("keyboard",{attrs:{id:"2","get-input":this.getInput,option:this.option2}})],1)},staticRenderFns:[]};var S=n("C7Lr")(M,E,!1,function(e){n("E7yS")},null,null).exports,L={games:[{name:"扫雷",path:"/games/mineSweep"},{name:"连连看",path:"/games/connection"}],css:[{name:"弹框",path:"/css/layer"},{name:"svg变形动画",path:"/css/svgDeformation"},{name:"canvas光线动画",path:"/css/lightLine"}],script:[{name:"输入框",path:"/jsdemo/input"}],canvas:[{name:"Canvas Api",path:"/canvas/canvasApi"},{name:"Canvas旋转",path:"/canvas/canvasTransform"},{name:"Canvas光线",path:"/canvas/opticalLine"}]},A={name:"MiddleComponent",data:function(){return{list:[]}},mounted:function(){var e=this.$route.params.id,t=void 0;if(L[e]){switch(e){case"css":t="样式";break;case"games":t="游戏";break;case"script":t="js插件";break;case"canvas":t="canvas";break;default:t="404"}this.$parent.msg=t,this.list=L[e]}else this.$parent.msg="404"},methods:{go:function(e){this.$router.push({path:e})}}},O={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return e.list?n("ul",{staticClass:"btn-list"},e._l(e.list,function(t){return n("li",{key:t.name,on:{click:function(n){return e.go(t.path)}}},[e._v(e._s(t.name))])}),0):e._e()},staticRenderFns:[]};var N=n("C7Lr")(A,O,!1,function(e){n("sqrW")},null,null).exports,j=n("uwWX"),H={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"canvas-main"},[n("header",{on:{click:e.back}},[e._v(e._s(e.obj.title))]),e._v(" "),e.obj.description?n("div",{directives:[{name:"pre-code",rawName:"v-pre-code",value:{description:e.obj.description,deCode:e.deCode},expression:"{description:obj.description,deCode:deCode}"}]}):e._e(),e._v(" "),e.obj.param?n("div",[n("div",{staticClass:"canvas-param-header"},[e._v("相关参数")]),e._v(" "),e._l(e.obj.param,function(t,a){return n("div",{staticClass:"canvas-param"},[n("p",{staticClass:"canvas-param-key"},[e._v(e._s(a))]),e._v(" "),t.description?n("div",{directives:[{name:"pre-code",rawName:"v-pre-code",value:{description:t.description,deCode:e.deCode},expression:"{description:param.description,deCode:deCode}"}]}):e._e(),e._v(" "),n("ul",{staticClass:"ml-10"},e._l(t,function(t,a){return n("li",{directives:[{name:"show",rawName:"v-show",value:"description"!=a,expression:"k != 'description'"}]},[n("p",{staticClass:"canvas-tomato"},[n("i",{staticClass:"canvas-list-mark"},[e._v("●")]),e._v(e._s(a))]),e._v(" "),n("p",[e._v(e._s(t))])])}),0)])})],2):e._e(),e._v(" "),e._l(e.obj.function,function(t){return n("ul",{staticClass:"canvas-fun"},[n("li",{on:{click:function(n){return e.next(t.name)}}},[n("p",{staticClass:"canvas-fun-a"},[e._v(e._s(t.name))]),e._v(" "),t.description?n("div",{directives:[{name:"pre-code",rawName:"v-pre-code",value:{description:t.description,deCode:e.deCode},expression:"{description:f.description,deCode:deCode}"}]}):e._e()])])}),e._v(" "),e._l(e.obj.groupFun,function(t,a){return e.obj.groupFun?n("div",{staticClass:"canvas-item"},[n("div",[e._v(e._s(a))]),e._v(" "),e._l(t,function(t){return n("ul",{staticClass:"canvas-fun"},[n("li",{on:{click:function(n){return e.next(t.name)}}},[n("p",{staticClass:"canvas-fun-a"},[e._v(e._s(t.name))]),e._v(" "),t.description?n("div",{directives:[{name:"pre-code",rawName:"v-pre-code",value:{description:t.description,deCode:e.deCode},expression:"{description:f.description,deCode:deCode}"}]}):e._e()])])})],2):e._e()}),e._v(" "),n("p",[n("button",{on:{click:e.showJson}},[e._v("123")]),e._v(" "),n("button",{attrs:{id:"button"},on:{click:e.start}},[e._v("执行")]),e._v(" "),e.obj.caseCode?n("select",{directives:[{name:"model",rawName:"v-model",value:e.caseCode,expression:"caseCode"}],staticClass:"canvas-select",on:{change:function(t){var n=Array.prototype.filter.call(t.target.options,function(e){return e.selected}).map(function(e){return"_value"in e?e._value:e.value});e.caseCode=t.target.multiple?n:n[0]}}},e._l(e.obj.caseCode,function(t,a){return n("option",{domProps:{value:t}},[e._v(e._s(a))])}),0):e._e()]),e._v(" "),n("textarea",{ref:"textarea",staticClass:"canvas-input"},[e._v(e._s(e.caseCode))]),e._v(" "),n("canvas",{ref:"picture",staticClass:"canvas-run",attrs:{id:"picture"}})],2)},staticRenderFns:[]};var W=function(e){n("MwO8")},B=n("C7Lr")(j.a,H,!1,W,null,null).exports,$={name:"SettingsComponent",data:function(){return{active:!1}},mounted:function(){this.$parent.msg="设置",this.active=x("console")},methods:{to:function(e){this.$router.push({path:"/"+e})},checkConsole:function(){this.active=!this.active,this.$parent.showConsole=this.active,x("console",this.active)}}},G={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",{staticClass:"set-list"},[n("li",{staticClass:"clearfix"},[n("span",{staticStyle:{float:"left"}},[e._v("console")]),e._v(" "),n("div",{staticClass:"checkboxThree",on:{click:function(t){return t.preventDefault(),e.checkConsole(t)}}},[n("input",{staticClass:"checkboxThreeInput",attrs:{type:"checkbox",value:"1",id:"checkboxThreeInput",name:""}}),e._v(" "),n("label",{class:{active:e.active},attrs:{for:"checkboxThreeInput"}})])]),e._v(" "),e._m(0)])},staticRenderFns:[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("li",{staticClass:"clearfix",staticStyle:{"text-align":"left"}},[n("span",[e._v("样式配色")]),e._v(" "),n("div",{staticClass:"flex"},[n("p",{staticStyle:{background:"#0D1740"}},[e._v("0D1740")]),e._v(" "),n("p",{staticStyle:{background:"#F8F2DC"}},[e._v("F8F2DC")]),e._v(" "),n("p",{staticStyle:{background:"#A39F93"}},[e._v("A39F93")]),e._v(" "),n("p",{staticStyle:{background:"#E9CFAE"}},[e._v("E9CFAE")]),e._v(" "),n("p",{staticStyle:{background:"#16245C"}},[e._v("16245C")])])])}]};var F=n("C7Lr")($,G,!1,function(e){n("52gh")},null,null).exports,q={name:"LightLineComponent",data:function(){return{x:0,y:0,p:0,n:0,r:0,dx:0,dy:0,ctx:"",width:980,color:0,point:0,height:1743,canvas:"",trashold:10,particles:[],deltaangle:0,noofpoints:200,innerpoints:[],outerpoints:[]}},mounted:function(){this.canvas=this.$refs.line,this.ctx=this.canvas.getContext("2d"),this.deltaangle=2*Math.PI/this.noofpoints,this.r=.5*Math.min(this.height,this.width),this.resize(),this.ctx.globalAlpha=.3,this.ctx.globalCompositeOperation="source-over",setInterval(this.render,30)},methods:{distance:function(e,t,n,a){return Math.sqrt(Math.pow(a-t,2)+Math.pow(n-e,2))},resize:function(){var e=this.ctx,t=this.canvas;if(this.height=e.canvas.clientHeight,this.width=e.canvas.clientWidth,e.canvas.clientWidth!==t.width||e.canvas.clientHeight!==t.height){t.width=this.width,t.height=this.height,e.translate(t.width/2,t.height/2),e.rotate(-Math.PI),this.innerpoints=[],this.r=1;for(var n=this.deltaangle;n<=2*Math.PI;n+=this.deltaangle){this.x=16*this.r*Math.pow(Math.sin(n),3),this.y=this.r*(13*Math.cos(n)-5*Math.cos(2*n)-2*Math.cos(3*n)-Math.cos(4*n)),this.innerpoints.push({x:this.x,y:this.y}),this.x=10*this.r*16*Math.pow(Math.sin(n),3),this.y=10*this.r*(13*Math.cos(n)-5*Math.cos(2*n)-2*Math.cos(3*n)-Math.cos(4*n)),this.outerpoints.push({x:this.x,y:this.y});var a=this.random(.001,.003,!0);this.particles.push({step:a,x:this.x,y:this.y})}}},random:function(e,t,n){return n?Math.random()*(t-e)+e:~~(Math.random()*(t-e)+e)},draw:function(){var e=this.ctx;e.fillStyle="rgba(0,0,0,0.03)",e.fillRect(-this.width,-this.height,2*this.width,2*this.height),e.beginPath();for(var t=0;t<this.innerpoints.length;t++){var n=this.outerpoints[t],a=this.innerpoints[t];this.point=this.particles[t],this.distance(this.point.x,this.point.y,a.x,a.y)>10?(this.dx=a.x-n.x,this.dy=a.y-n.y,this.point.x+=this.dx*this.point.step,this.point.y+=this.dy*this.point.step,this.color=this.distance(0,0,this.point.x,this.point.y),e.beginPath(),e.fillStyle="hsl("+this.color%360+",100%,50%)",e.arc(this.point.x,this.point.y,2,0,2*Math.PI,!1),e.closePath(),e.fill()):(this.point.x=a.x,this.point.y=a.y,e.beginPath(),e.arc(this.point.x,this.point.y,2,0,2*Math.PI,!1),e.closePath(),e.fill(),this.particles[t].x=n.x,this.particles[t].y=n.y,this.particles[t].step=this.random(.001,.003,!0))}},render:function(){this.resize(),this.draw()}}},X={render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"body"},[t("canvas",{ref:"line"})])},staticRenderFns:[]};var U=n("C7Lr")(q,X,!1,function(e){n("3+cF")},"data-v-36e687c3",null).exports,K=n("ZLEe"),Y=n.n(K),z={name:"SweepMineComponent",props:["setHead"],data:function(){return{status:!1,boxNum:0,mineNum:10,list:[],endMark:!1,touchTime:0,markId:"",timeKey:0,maxBut:"30",markList:[],mineArr:[],open:!1,showScreen:!0,huors:0,minutes:0,seconds:0,timeId:0,time:0,endTxt:"",row:0,col:0}},mounted:function(){var e=this;this.setHead({msg:"扫雷",leftCb:function(){clearTimeout(e.timeId)},rightCb:function(){clearTimeout(e.timeId)}}),setTimeout(function(){e.open=!0},0),document.addEventListener("visibilitychange",function(t){e.showScreen||e.status||(document.hidden?clearTimeout(e.timeId):(clearTimeout(e.timeId),e.setTime()))}),setTimeout(function(){e.boxNum=100,e.searchRow(),e.init()},1200)},methods:{init:function(){Math.sqrt(this.boxNum),window.innerWidth;var e=[];if(!(this.boxNum<=0||this.boxNum<this.mineNum)){for(var t=this.initMine(),n=0;n<this.row;n++){for(var a=[],i=0;i<this.col;i++)if(~Y()(t).indexOf(n+","+i)){var s=t[n+","+i];-1==s?a.push({id:n+","+i,type:1,mark:!1,flag:!1}):a.push({id:n+","+i,type:2,num:s,mark:!1,flag:!1})}else a.push({id:n+","+i,type:0,mark:!1,flag:!1});e.push(a)}this.list=e,clearTimeout(this.timeId),this.time=new Date,this.showScreen||this.setTime(0)}},initMine:function(){var e=[],t=[];for(Math.sqrt(this.boxNum);t.length<this.mineNum;){var n=~~(Math.random()*this.boxNum);if(!~t.indexOf(n)){t.push(n);var a=~~(n/this.row),i=~~(n%this.col);e[a+","+i]=-1,e=this.countMine(a+1,i-1,e),e=this.countMine(a+1,i,e),e=this.countMine(a+1,i+1,e),e=this.countMine(a,i-1,e),e=this.countMine(a,i+1,e),e=this.countMine(a-1,i,e),e=this.countMine(a-1,i-1,e),e=this.countMine(a-1,i+1,e)}}return this.mineArr=t,e},countMine:function(e,t,n){if(this.borderCheck(e,t))return n;var a=e+","+t;return-1==n[a]?n:(~Y()(n).indexOf(a)?n[a]=n[a]+1:n[a]=1,n)},touchstart:function(e,t){e.preventDefault(),this.touchTime=new Date;var n=this,a=t.split(",")[0],i=t.split(",")[1],s=e.target;this.status||"after-mark"!=s.className&&(this.list[a][i].flag=!0,~this.markList.indexOf(t+"")||(this.markId=""),this.list[a][i].mark||(this.timeKey=setTimeout(function(){n.markId=t},500)))},touchmove:function(){},touchend:function(e,t){var n=this,a=t.split(",")[0],i=t.split(",")[1],s=this.list[a][i];clearTimeout(this.timeKey);var o=e.target;if(!this.status)if("after-mark"==o.className||~this.markList.indexOf(t+""))s.flag=!1;else if(new Date-this.touchTime>500)s.mark||(this.markId=t),s.flag=!1;else{if(2==s.type&&(s.mark=!0),1==s.type)return s.mark=!0,this.status=!0,this.endTxt="游戏完结",clearTimeout(this.timeId),void setTimeout(function(){n.endMark=!0},0);0!=s.type||s.mark||this.checkEmpty(a,i);var r=v.a.flatten(this.list);if(v.a.filter(r,function(e){return 2==e.type&&!e.mark}).length<=0)return this.status=!0,this.endTxt="游戏胜利",clearTimeout(this.timeId),void setTimeout(function(){n.endMark=!0},0)}},showMine:function(){for(var e=this.mineArr.length-1;e>=0;e--){var t=this.mineArr[e],n=~~(t/this.row),a=~~(t%this.col);this.list[n][a].mark=!0}},checkEmpty:function(e,t){for(var n=this.list,a=[],i=n[e][t];;){switch(i.mark||(i.mark=!0),e=+i.id.split(",")[0],t=+i.id.split(",")[1],i.status){case-1:break;case 2:e-=1,t-=1,i.status=3;break;case 3:e-=1,i.status=4;break;case 4:e-=1,t+=1,i.status=5;break;case 5:t-=1,i.status=6;break;case 6:t+=1,i.status=7;break;case 7:e+=1,t-=1,i.status=8;break;case 8:e+=1,i.status=9;break;case 9:e+=1,t+=1,i.status=10;break;case 10:i.status=-1;break;default:t-=1,i.status=2}if(-1==i.status&&a.length<=0)return;if(!this.borderCheck(e,t))if(-1!=i.status){var s=i;(i=n[e][t]).mark?i=s:1!=i.type&&2!=i.type?(i.mark=!0,a.push(i)):(i.mark=!0,i=s)}else i=a.pop()}},borderCheck:function(e,t){Math.sqrt(this.boxNum);return e<0||e>=this.row||t<0||t>=this.col},markMine:function(e){~this.markList.indexOf(e)||this.markList.push(e),this.markId=""},clearMark:function(e){~this.markList.indexOf(e)&&this.markList.splice(this.markList.indexOf(e),1),this.markId=""},horizontal:function(){var e=document.documentElement.clientWidth,t=document.documentElement.clientHeight,n=document.getElementById("app"),a="";e>=t?(a+="width:100%;",a+="height:100%;",a+="-webkit-transform: rotate(0); transform: rotate(0);",a+="-webkit-transform-origin: 0 0;",a+="transform-origin: 0 0;"):(a+="width:"+t+"px;",a+="height:"+e+"px;",a+="-webkit-transform: rotate(90deg); transform: rotate(90deg);",a+="-webkit-transform-origin: "+e/2+"px "+e/2+"px;",a+="transform-origin: "+e/2+"px "+e/2+"px;"),n.style.cssText=a},searchRow:function(){var e=window.innerWidth,t=window.innerHeight,n=Math.sqrt(this.boxNum),a=0,i=0,s=Math.floor(e/this.maxBut),o=Math.floor((t-84)/this.maxBut);n>s||n>o?(a=s,i=Math.ceil(this.boxNum/a)):(a=n,i=n),i=i>o?o:i,this.row=i,this.col=a,this.boxNum=parseInt(i*a)},refresh:function(){this.status=!1,this.endMark=!1,this.huors=this.minutes=this.seconds=0,clearTimeout(this.timeId),this.time=new Date,this.init()},start:function(){var e=this;this.open=!1,setTimeout(function(){e.boxNum=100,clearTimeout(e.timeId),e.time=new Date,e.setTime(0),e.showScreen=!1},1e3)},setTime:function(){var e=this;this.timeId=setTimeout(function(){clearTimeout(e.timeId);var t=new Date-e.time,n=36e5;if(t-(e.huors*n+6e4*e.minutes+1e3*e.seconds)>=1e3&&(e.huors=~~(t/n),e.minutes=~~(t%n/6e4),e.seconds=~~(t%6e4/1e3)),e.huors>=99)return e.seconds=0,e.minutes=0,void(e.huors=99);e.setTime()},100)}},filters:{zero:function(e){return e<10?"0"+e:e}}},J={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("header",{staticClass:"mine-head"},[n("button",{staticClass:"mine-search",on:{click:e.refresh}},[e._v("刷新")]),e._v(" "),n("div",{staticClass:"mine-time"},[n("span",[e._v(e._s(e._f("zero")(e.huors)))]),e._v(":\n            "),n("span",[e._v(e._s(e._f("zero")(e.minutes)))]),e._v(":\n            "),n("span",[e._v(e._s(e._f("zero")(e.seconds)))])]),e._v(" "),n("button",{staticClass:"mine-show",on:{click:e.showMine}},[e._v("完毕")])]),e._v(" "),n("ul",e._l(e.list,function(t){return n("li",{staticClass:"item-parent"},e._l(t,function(t,a){return n("div",{staticClass:"item-son",class:{active:t.mark||t.flag},on:{touchstart:function(n){return e.touchstart(n,t.id)},touchmove:function(t){return t.stopPropagation(),t.preventDefault(),e.touchmove(t)},touchend:function(n){return e.touchend(n,t.id)}}},[n("div",{class:{num:2==t.type||!t.mark||0==t.type,mine:1==t.type&&t.mark}},[n("span",{directives:[{name:"show",rawName:"v-show",value:2==t.type&&t.mark||t.mark&&0==t.type,expression:"(o.type == 2 && o.mark) || (o.mark && o.type==0)"}],staticClass:"num-after"},[e._v(e._s(t.num))]),e._v(" "),n("span",{directives:[{name:"show",rawName:"v-show",value:!t.mark&&~e.markList.indexOf(t.id),expression:"!o.mark && ~markList.indexOf(o.id)"}],staticClass:"num-after"},[e._v("标记")]),e._v(" "),n("p",{directives:[{name:"show",rawName:"v-show",value:e.markId==t.id,expression:"markId==o.id"}],staticClass:"after-tip",class:{"after-tip-right":e.mineNum==a+1}},[n("span",{staticClass:"after-mark",on:{touchstart:function(n){return n.preventDefault(),e.markMine(t.id)}}},[e._v("标记")]),e._v(" "),n("span",{staticClass:"after-mark",on:{touchstart:function(n){return n.preventDefault(),e.clearMark(t.id)}}},[e._v("清除")])])])])}),0)}),0),e._v(" "),n("div",{directives:[{name:"show",rawName:"v-show",value:e.showScreen,expression:"showScreen"}],staticClass:"mine-screen",class:{open:e.open}},[e._m(0),e._v(" "),n("div",{staticClass:"mine-screen-content",on:{click:e.start}},[e._v("开始")])]),e._v(" "),n("div",{staticClass:"mine-end",class:{"end-mark":e.endMark}},[e._v(e._s(e.endTxt))])])},staticRenderFns:[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"mine-screen-wall"},[n("div",{staticClass:"mine-screen-left"},[n("div",{staticClass:"mine-surface1"}),e._v(" "),n("div",{staticClass:"mine-surface2"}),e._v(" "),n("div",{staticClass:"mine-surface3"}),e._v(" "),n("div",{staticClass:"mine-surface4"}),e._v(" "),n("div",{staticClass:"mine-surface5"}),e._v(" "),n("div",{staticClass:"mine-surface6"})]),e._v(" "),n("div",{staticClass:"mine-screen-right"},[n("div",{staticClass:"mine-surface1"}),e._v(" "),n("div",{staticClass:"mine-surface2"}),e._v(" "),n("div",{staticClass:"mine-surface3"}),e._v(" "),n("div",{staticClass:"mine-surface4"}),e._v(" "),n("div",{staticClass:"mine-surface5"}),e._v(" "),n("div",{staticClass:"mine-surface6"})])])}]};var V=n("C7Lr")(z,J,!1,function(e){n("hvfH")},null,null).exports,Z={render:function(){var e=this.$createElement;return(this._self._c||e)("div")},staticRenderFns:[]};var Q=n("C7Lr")({name:"ConnectionComponent",props:["setHead"],data:function(){return{}},mounted:function(){},methods:{},filters:{}},Z,!1,function(e){n("R2kJ")},"data-v-0ec06296",null).exports,ee=n("lC5x"),te=n.n(ee),ne=n("rVsN"),ae=n.n(ne),ie={name:"OpticalLineComponent",props:["setHead"],data:function(){return{ctx:"",mark:5,mama:{}}},mounted:function(){this.setHead({msg:"光线"}),this.initCanvas()},methods:{initCanvas:function(){var e=te.a.mark(l),t=this.$refs.canvas;t.style.width=document.documentElement.clientWidth+"px",t.style.height=document.documentElement.clientHeight-49+"px",t.width=3*document.documentElement.clientWidth,t.height=3*(document.documentElement.clientHeight-49),t.style.background="black";var n=t.getContext("2d");n.scale(3,3),n.lineWidth=1,n.strokeStyle="#fff",n.beginPath(),n.closePath();var a=document.documentElement.clientWidth/2,i=24,s=34,o=document.documentElement.clientWidth,r=o-2*s,c=Math.sqrt(r*r-r/2*r/2);console.log(r);var d=this;function l(){var t,r;return te.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return(t=[]).push(d.pro(function(e){d.drawLine2(n,{x:a,y:i},{x:s,y:c+i},7.5,e)})),t.push(d.pro(function(e){d.drawLine2(n,{x:s,y:c+i},{x:o-s,y:c+i},7.5,e)})),t.push(d.pro(function(e){d.drawLine2(n,{x:o-s,y:c+i},{x:a,y:i},7.5,e)})),ae.a.all(t).then(function(){d.mama.next()}),void(e.next=7);case 7:return(r=[]).push(d.pro(function(e){d.drawLine2(n,{x:s,y:c/3+i},{x:o-s,y:c/3+i},7.5,e)})),r.push(d.pro(function(e){d.drawLine2(n,{x:o-s,y:c/3+i},{x:a,y:c+c/3+i},7.5,e)})),r.push(d.pro(function(e){d.drawLine2(n,{x:a,y:c+c/3+i},{x:s,y:c/3+i},7.5,e)})),ae.a.all(r).then(function(){d.mama.next()}),void(e.next=14);case 14:d.drawArc(n,{x:a,y:(c+c/3)/2+i},2*c/3,4,function(){}),d.drawArc(n,{x:a,y:(c+c/3)/2+i},c/3,4,function(){},-1);case 16:case"end":return e.stop()}},e,this)}this.mama=l(),this.mama.next()},drawLine2:function(e,t,n,a,i,s){var o=this,r=Math.abs(t.x-n.x)>=Math.abs(t.y-n.y),c=(r?t.x-n.x:t.y-n.y)>=0?-1:1,d=Math.abs(r?t.x-n.x:t.y-n.y),l=r?t.x:t.y,p=r?n.x:n.y;s=s||{x:t.x,y:t.y};var h=r?s.x:s.y;if(h>p+18&&c>=0||h<p-18&&c<0)return e.strokeStyle="green",e.moveTo(t.x,t.y),e.lineTo(n.x,n.y),e.closePath(),e.stroke(),void(i&&i());requestAnimationFrame(function(){var p,v,x=void 0,m=void 0,C=void 0,u=void 0;p=Math.abs(h-l)<=18,v=Math.abs(h-l)<=d,r?(x=p?l:h-18*c,m=o.lineFun(t,n,x),C=v?h:n.x,u=o.lineFun(t,n,C)):t.x==n.x?(m=p?l:h-18*c,u=v?h:n.y,x=C=t.x):t.y==n.y?(x=p?l:h-18*c,C=v?h:n.x,m=u=t.y):(m=p?l:h-18*c,u=v?h:n.y,x=o.lineFun(t,n,-1*m),C=o.lineFun(t,n,-1*u));var g=e.createLinearGradient(x,m,C,u);g.addColorStop(0,"green"),g.addColorStop(1,"white"),e.strokeStyle="green",e.moveTo(x,m),e.lineTo(C,u),e.closePath(),e.stroke(),h+=a*c,s[r?"x":"y"]=h,o.drawLine2(e,t,n,a,i,s)})},pro:function(e){return new ae.a(function(t,n){e&&e(t)})},drawArc:function(e,t,n,a,i){var s=this,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,r=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;if(r>361)return i&&i();requestAnimationFrame(function(){e.strokeStyle="green",e.beginPath(),e.arc(t.x,t.y,n,-Math.PI*o/2,Math.PI*(r-90)*o/180,-1==o),e.stroke(),r+=a,s.drawArc(e,t,n,a,i,o,r)})},distance:function(e,t,n,a){return Math.sqrt(Math.pow(a-t,2)+Math.pow(n-e,2))},arcLine:function(e,t){var n=20,a=setInterval(function(){n>=300&&clearInterval(a);for(var t=n,i=0;i<=n-20;i+=.5){var s=void 0;s=i+20>=t?"hsl(120,80%,100%)":i+20>=t-3?"hsl(120,80%,90%)":i+20>=t-6?"hsl(120,80%,80%)":i+20>=t-18?"hsl(120,80%,70%)":i+20>=t-24?"hsl(120,80%,60%)":i+20>=t-30?"hsl(120,80%,50%)":"hsl(120,800%,50%)",e.strokeStyle=s,e.beginPath(),e.arc(20+i,400,.5,0,2*Math.PI),e.closePath(),e.stroke()}e.strokeStyle="hsl(120,80%,100%)",e.beginPath(),e.arc(n,400,1.5,0,2*Math.PI),e.closePath(),e.stroke(),n+=.5},0)},drawLine:function(e,t,n,a,i,s){var o=this,r=Math.abs(t.x-n.x)>=Math.abs(t.y-n.y),c=(r?t.x-n.x:t.y-n.y)>=0?-1:1,d=Math.abs(r?t.x-n.x:t.y-n.y),l=r?t.x:t.y;s=s||{x:t.x,y:t.y};var p=r?s.x:s.y;return p>l+d+18&&c>=0?(e.strokeStyle="hsl(120,800%,50%)",e.beginPath(),e.arc(n.x,n.y,.5,0,2*Math.PI),e.closePath(),e.stroke(),void(i&&i())):p<l-d-18&&c<0?(e.strokeStyle="hsl(120,800%,50%)",e.beginPath(),e.arc(n.x,n.y,.5,0,2*Math.PI),e.closePath(),e.stroke(),void(i&&i())):void requestAnimationFrame(function(){for(var h=0;h<=Math.abs(p-l);h+=.5){var v=void 0,x=h*c;v=c>0?x+l>l+d?"hsl(120,80%,0%)":x+l>=p?"hsl(120,80%,100%)":x+l>=p-3?"hsl(120,80%,90%)":x+l>=p-6?"hsl(120,80%,75%)":x+l>=p-18?"hsl(120,80%,60%)":"hsl(120,800%,50%)":x<d*c?"hsl(120,80%,0%)":x+l<=p?"hsl(120,80%,100%)":x+l<=p-3?"hsl(120,80%,90%)":x+l<=p-6?"hsl(120,80%,75%)":x+l<=p-18?"hsl(120,80%,60%)":"hsl(120,800%,50%)",e.strokeStyle=v,e.beginPath();var m=void 0,C=void 0;r?(m=l+x,C=o.lineFun(t,n,m)):t.x==n.x?(C=l+x,m=t.x):t.y==n.y?(m=l+x,C=t.y):(C=l+x,m=o.lineFun(t,n,-1*C)),e.arc(m,C,.5,0,2*Math.PI),e.closePath(),e.stroke()}p+=a*c,s[r?"x":"y"]=p,o.drawLine(e,t,n,a,i,s)})},lineFun:function(e,t,n){var a=e.x,i=e.y,s=t.x,o=t.y;return n<0?(Math.abs(n)-(i-a*(i-o)/(a-s)))*(a-s)/(i-o):Math.abs(n)*(i-o)/(a-s)+(i-a*(i-o)/(a-s))},start1:function(e,t,n,a){var i=setInterval(function(){var s=((a=a>=300?300:a)-(300-5600/(20-t)))*(20-t)/280;a<=300&&(e.strokeStyle="white",e.moveTo(t,n),e.lineTo(s,a),e.closePath(),e.stroke()),300==a&&clearInterval(i),a+=7.5},50)},move:function(e,t,n){var a=setInterval(function(){(t=t>=document.documentElement.clientWidth-20?document.documentElement.clientWidth-20:t)==document.documentElement.clientWidth-20&&clearInterval(a),e.strokeStyle="white",e.moveTo(20,n),e.lineTo(t,n),e.closePath(),e.stroke(),t+=10},50)},end:function(e,t,n){var a=t,i=setInterval(function(){var s=document.documentElement.clientWidth,o=(a=a<=s/2?s/2:a)*(280/(s-20-s/2))+20-s/2*(280/(s-20-s/2));a==s/2&&clearInterval(i),e.strokeStyle="white",e.moveTo(t,n),e.lineTo(a,o),e.closePath(),e.stroke(),a-=5},50)}}},se={render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",[t("canvas",{ref:"canvas",staticClass:"canvas-content"})])},staticRenderFns:[]};var oe=n("C7Lr")(ie,se,!1,function(e){n("QGNC")},null,null).exports,re=(n("hrFd"),{name:"CanvasTransformComponent",props:["setHead"],data:function(){return{canvasObj:"",mark:0,touch:{x:0,y:0}}},mounted:function(){this.horizontal()},methods:{horizontal:function(){var e=document.documentElement.clientWidth,t=document.documentElement.clientHeight,n=(document.getElementById("app"),"");e>=t?(n+="width:100%;",n+="height:100%;",n+="-webkit-transform: rotate(0); transform: rotate(0);",n+="-webkit-transform-origin: 0 0;",n+="transform-origin: 0 0;"):(n+="width:"+t+"px;",n+="height:"+e+"px;",n+="-webkit-transform: rotate(90deg); transform: rotate(90deg);",n+="-webkit-transform-origin: "+e/2+"px "+e/2+"px;",n+="transform-origin: "+e/2+"px "+e/2+"px;"),document.body.style.cssText=n,this.$refs.canvas.width=t,this.$refs.canvas.height=300,this.canvasObj=this.$refs.canvas.getContext("2d"),this.mark=document.documentElement.clientWidth-this.$refs.canvas.offsetTop-document.getElementById("app").scrollTop},touchstart:function(e){this.mark+=document.getElementById("app").scrollTop,this.touch.x=e.touches[0].pageY,this.touch.y=this.mark-e.touches[0].pageX},move:function(e){var t=e.touches[0].pageY,n=this.mark-e.touches[0].pageX;this.moveLine(t,n)},end:function(){},moveLine:function(e,t){this.canvasObj.beginPath(),this.canvasObj.moveTo(this.touch.x,this.touch.y),this.canvasObj.lineTo(e,t),this.canvasObj.stroke(),this.touch.x=e,this.touch.y=t}}}),ce={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"canvas-main"},[n("div",[e._v("手动福建省代理费京东方两件事砥砺奋进手动福建省代理费京东方两件事砥砺奋进")]),e._v(" "),n("canvas",{ref:"canvas",staticClass:"canvas-content",on:{touchstart:function(t){return e.touchstart(t)},touchmove:function(t){return e.move(t)},touchend:function(t){return e.end(t)}}})])},staticRenderFns:[]};var de=n("C7Lr")(re,ce,!1,function(e){n("Keoz")},"data-v-feb96774",null).exports;a.a.use(k.a),a.a.use(y.a);var le=new y.a({mode:"hash",routes:[{path:"",name:"HelloWorld",component:b},{path:"/settings",name:"SettingsComponent",component:F},{path:"/:id",name:"MiddleComponent",component:N},{path:"/games/mineSweep",name:"SweepMineComponent",component:V},{path:"/games/connection",name:"ConnectionComponent",component:Q},{path:"/css/layer",name:"LayerComponent",component:T},{path:"/css/svgDeformation",name:"SvgDeformation",component:w},{path:"/css/lightLine",name:"LightLineComponent",component:U},{path:"/jsdemo/input",name:"InputComponent",component:S},{path:"/canvas/canvasApi",name:"CanvasComponent",component:B},{path:"/canvas/canvasTransform",name:"CanvasTransformComponent",component:de},{path:"/canvas/opticalLine",name:"OpticalLineComponent",component:oe}]});le.beforeEach(function(e,t,n){return f()(".keyboard-main").remove(),document.body.style="",n()});var pe=le;a.a.config.productionTip=!1;console.oldLog=console.log;var he=void 0;he=a.a.config.errorHandler,a.a.config.errorHandler=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];var a=t[0],i=document.createElement("li"),s=document.getElementById("console_main");i.innerHTML='<div class="console-erruri">'+a.message+'</div><div class="console-errmsg">&gt;&gt;'+a.stack+"</div>",s&&s.prepend(i),he&&he(t)},new a.a({el:"#app",router:pe,components:{App:u},template:"<App/>"})},QGNC:function(e,t){},R2kJ:function(e,t){},hrFd:function(e,t,n){"use strict";t.a={HTMLCanvasElement:{title:"Canvas元素(DOM)",description:"HTMLCanvasElement可以看成是所有<canvas>元素的代称,然后继承于HTMLElement,可以在控制台输入window.HTMLCanvasElement,通常这些接口会内置一些属性和方法,我们也可以根据自己需求自定义一些方法方便调用：<deCode>",attribute:[{name:"HTMLCanvasElement.width",description:"表示<canvas>画布绘制区域的宽度,标准属性值为正整数,单位是像素.如果宽度值不合法,则会使用默认的300代替.css规范中定义的,作为替换元素,默认的尺寸是300*150,<canvas>和<svg>都是替换元素"},{name:"HTMLCanvasElement.height",description:"表示<canvas>画布绘制区域的高度,标准属性值为正整数,单位是像素.如果高度值不合法,则会使用默认的150代替.css规范中定义的,作为替换元素,默认的尺寸是300*150,<canvas>和<svg>都是替换元素"}],deCode:["//检测canvas画布上是否有透明或有半透明像素点HTMLCanvasElement.prototype.isSomeAlphaPixel=function(){\n  var context = this.getContext('2d');\n  //获取图片像素信息\n  var imageData=context.getImageData(0,0,this.width,this.height).data;\n  //检测有没有透明数据\n  var isAlphaBackground=false;\n  for(var index=3;index<imageData.length;index+=4){\n    if(imageData[index]!=255){\n      isAlphaBackground=true;\n      break;\n    }\n   }\n  return isAlphaBackground;\n};\nvar canvas = document.querySelector('canvas');\n//输出true或false\nconsole.log(canvas.isSomeAlphaPixel());"],function:[{name:"HTMLCanvasElement.getContext",description:"获取<canvas>相关的可绘制的上下文"},{name:"HTMLCanvasElement.toDataURL",description:"此方法可以将<canvas>画布转换为base64格式的图片数据,我们可以通过设定参数指定转换的图片类型,甚至图片的清晰度."},{name:"HTMLCanvasElement.toBlob",description:"可以将<canvas>画布转换为Blob对象"},{name:"CanvasRenderingContext2D",description:"接口提供的 2D 渲染背景用来绘制<canvas>元素，为了获得这个接口的对象，需要在 <canvas> 上调用 getContext() ，并提供一个 2d 的参数"},{name:"CanvasGradient",description:"接口表示描述渐变的不透明对象。通过 CanvasRenderingContext2D.createLinearGradient() 或 CanvasRenderingContext2D.createRadialGradient() 的返回值得到"}]},"HTMLCanvasElement.getContext":{title:"HTMLCanvasElement.getContext",description:"获取<canvas>相关的可绘制的上下文,我们可以借助其上下文绘制各种图形和效果,语法：<deCode>",param:{contextType:{description:"","2d":"会创建并返回一个CanvasRederingContext2D对象,主要用来进行2d绘制",webgl:"此参数可以返回一个WebGLRenderingContext(WebGL渲染上下文)对象,WebGL是一个3D绘图协议,可以为HTML5 Canvas提供硬件3D加速渲染,这样web开发人员就可以借助系统显卡来浏览器里更流畅地展示3D场景和模型，无需安装任何其他插件,对应WebGL版本1(OpenGL ES2.0)",webgl2:"此参数可以返回一个WebGL2RenderingContext对象,可以用来绘制三维3D效果.此参数对应WebGL版本2(OpenGL ES3.0)",bitmaprenderer:"创建一个ImageBitmapRenderingContext对象(位图渲染上下文),可以借助给定的ImageBitmap"},contextAttribute:{description:"该参数是一个可选存对象参数,示意:<deCode>",alpha:"表示Canvas是否包含alpha透明通道,如果设置为false,则表示Canvas不支持全透明或者半透明,在绘制带有透明效果的图形或则图像时候速度会更快一些,如果contextType参数是webgl,表示Canvas是否包含透明缓冲区",antialias:"contextType参数为webgl,表示是否需要抗边缘锯齿,如果设置为true,图像呈现质量会好一点,但是速度会拖慢",depth:"contextType参数为webgl,表示缓冲区深度至少16位",failIfMajorPerformanceCaveat:"contextType参数为webgl,表示如果用户的系统性能比较差,是否继续常见绘制上下文",powerPreference:"contextType参数为webgl,告诉用户使用的客户端我们现在这个WebGL上下文最适合的GPU配置是什么,支持default、high-performance(渲染性能优先)、lo-power关键词(省电优先)",premultipliedAlpha:"contextType参数为webgl,表示页面合成器将假定绘图缓冲区包含具有alpha预乘颜色",preserveDrawingBuffer:"contextType参数为webgl,如果值为true,则不会清楚缓冲区并保留其值,直到作者清除或覆盖",stencil:"contextType参数为webgl,表示绘图缓冲区具有至少8位的模板缓冲区"}},deCode:["var canvas = document.getElementById('canvas');\nvar context = canvas.getContext(contextType,[contextAttribute]);","var gl = canvas.getContext('webgl', {\n  antialias: false,\n  depth: false\n})"],caseCode:{"2d对象":"console.dir(ctx);"}},"HTMLCanvasElement.toBlob":{title:"HTMLCanvasElement.toBlob",description:"用以展示canvas上的图片,这个图片文件可以被缓存或保存到本地,由用户代理端自行决定.图片类型默认png,分辨率是96dpi,语法:<deCode>",param:{callback:{description:"回调函数，可获得一个单独的Blob对象参数"},type:{description:"该参数是一个可选存对象参数,DOMString类型，指定图片格式，默认格式为image/png"},encoderOptions:{description:"该参数是一个可选存对象参数,Number类型，值在0与1之间，当请求图片格式为image/jpeg或者image/webp时用来指定图片展示质量。如果这个参数的值不在指定类型与范围之内，则使用默认值，其余参数将被忽略。"}},deCode:["canvas.toBlob(callback, type, encoderOptions);"],caseCode:{"blob回调":'canvas.toBlob(function(blob) {\n  var newImg = document.createElement("img"),\n    url = URL.createObjectURL(blob);\n    newImg.onload = function() {\n      // no longer need to read the blob so it\'s revoked\n      URL.revokeObjectURL(url);\n    };\n  newImg.src = url;\n  document.body.appendChild(newImg);\n});'}},"HTMLCanvasElement.toDataURL":{title:"HTMLCanvasElement.toDataURL",description:"方法返回一个包图片展示的dataURI,可以使用type参数其类型,默认为 PNG 格式。图片的分辨率为96dpi,如果画布的高度或宽度是0，那么会返回字符串'data:'.返回值data URI 的DOMString.语法:<deCode>",param:{type:{description:"该参数是一个可选存对象参数,图片格式，默认为 image/png"},encoderOptions:{description:"该参数是一个可选存对象参数,在指定图片格式为 image/jpeg 或 image/webp的情况下，可以从 0 到 1 的区间内选择图片的质量。如果超出取值范围，将会使用默认值 0.92。其他参数会被忽略"}},deCode:["canvas.toDataURL(type, encoderOptions);"],caseCode:{base64:"var dataURL = canvas.toDataURL();\nconsole.log(dataURL);"}},CanvasRenderingContext2D:{title:"CanvasRenderingContext2D",description:"接口提供的 2D 渲染背景用来绘制<canvas>元素，为了获得这个接口的对象，需要在 <canvas> 上调用 getContext() ，并提供一个 2d 的参数",groupFun:{"绘制矩形":[{name:"CanvasRenderingContext2D.clearRect",description:"设置指定矩形区域内（以 点 (x, y) 为起点，范围是(width, height) ）所有像素变成透明，并擦除之前绘制的所有内容"},{name:"CanvasRenderingContext2D.fillRect",description:"绘制填充矩形，矩形的起点在 (x, y) 位置，矩形的尺寸是 width 和 height "},{name:"CanvasRenderingContext2D.strokeRect",description:"在 canvas 中，使用当前的绘画样式，描绘一个起点在 (x, y) 、宽度为 w 、高度为 h 的矩形。"}],"绘制文本":[{name:"CanvasRenderingContext2D.fillText",description:"在(x,y)位置绘制（填充）文本。"},{name:"CanvasRenderingContext2D.strokeText",description:"在(x,y)位置绘制（描边）文本。"},{name:"CanvasRenderingContext2D.measureText",description:"返回 TextMetrics 对象。"}],"线条样式":[{name:"CanvasRenderingContext2D.lineWidth",description:"线条宽度,主使用场景是描边,默认宽度是1.0,支持小数"},{name:"CanvasRenderingContext2D.lineCap",description:"线条两头端点的样式"},{name:"CanvasRenderingContext2D.lineJoin",description:"线条转角的样式,尖平圆"},{name:"CanvasRenderingContext2D.miterLimit",description:"尖角限制比率.线条的尖角如果没有限制,在线条的粗角度小的情况下回很长很长,因此,需要一个限制比率.默认是10"},{name:"CanvasRenderingContext2D.getLineDash",description:"返回当前虚线数值.返回一个偶数个数的数组"},{name:"CanvasRenderingContext2D.setLineDash",description:"设置线条为虚线"},{name:"CanvasRenderingContext2D.lineDashOffset",description:"设置虚线的起始偏移"}],"文本样式":[{name:"CanvasRenderingContext2D.font",description:"字体设置。 默认值 10px sans-serif"},{name:"CanvasRenderingContext2D.textAlign",description:"文本对齐设置。 允许的值： start (默认), end, left, right 或 center."},{name:"CanvasRenderingContext2D.textBaseline",description:"基线对齐设置。 允许的值： top, hanging, middle, alphabetic (默认),ideographic, bottom"}],"填充和描边样式":[{name:"CanvasRenderingContext2D.fillStyle",description:"图形内部的颜色和样式。 默认 #000 (黑色)"},{name:"CanvasRenderingContext2D.strokeStyle",description:"图形边线的颜色和样式。 默认 #000 (黑色)"}],"渐变和图案":[{name:"CanvasRenderingContext2D.createLinearGradient",description:"创建一个沿着参数坐标指定的线的线性渐变"},{name:"CanvasRenderingContext2D.createRadialGradient",description:"创建一个沿着参数坐标指定的线的放射性性渐变"},{name:"CanvasRenderingContext2D.createPattern",description:"使用指定的图片 (a CanvasImageSource)创建图案。通过 repetition 变量指定的方向上重复源图片。此方法返回 CanvasPattern对象"}],"阴影":[{name:"CanvasRenderingContext2D.shadowBlur",description:"描述模糊效果。 默认 0"},{name:"CanvasRenderingContext2D.shadowColor",description:"阴影的颜色。 默认fully-transparent black."},{name:"CanvasRenderingContext2D.shadowOffsetX",description:"阴影水平方向的偏移量。 默认 0."},{name:"CanvasRenderingContext2D.shadowOffsetY",description:"阴影垂直方向的偏移量。 默认 0."}],"路径":[{name:"CanvasRenderingContext2D.beginPath",description:"清空子路径列表开始一个新的路径。当你想创建一个新的路径时，调用此方法"},{name:"CanvasRenderingContext2D.closePath",description:"使笔点返回到当前子路径的起始点。它尝试从当前点到起始点绘制一条直线。如果图形已经是封闭的或者只有一个点，那么此方法不会做任何操作"},{name:"CanvasRenderingContext2D.moveTo",description:"将一个新的子路径的起始点移动到(x，y)坐标"},{name:"CanvasRenderingContext2D.lineTo",description:"使用直线连接子路径的最后的点到x,y坐标"},{name:"CanvasRenderingContext2D.bezierCurveTo",description:"添加一个3次贝赛尔曲线路径。该方法需要三个点。 第一、第二个点是控制点，第三个点是结束点。起始点是当前路径的最后一个点，绘制贝赛尔曲线前，可以通过调用 moveTo() 进行修改"},{name:"CanvasRenderingContext2D.quadraticCurveTo",description:"添加一个2次贝赛尔曲线路径"},{name:"CanvasRenderingContext2D.arc",description:"绘制一段圆弧路径， 圆弧路径的圆心在 (x, y) 位置，半径为 r ，根据anticlockwise （默认为顺时针）指定的方向从 startAngle 开始绘制，到 endAngle 结束"},{name:"CanvasRenderingContext2D.arcTo",description:"根据控制点和半径绘制圆弧路径，使用当前的描点(前一个moveTo或lineTo等函数的止点)。根据当前描点与给定的控制点1连接的直线，和控制点1与控制点2连接的直线，作为使用指定半径的圆的切线，画出两条切线之间的弧线路径"},{name:"CanvasRenderingContext2D.ellipse",description:"添加一个椭圆路径，椭圆的圆心在（x,y）位置，半径分别是radiusX 和 radiusY ，按照anticlockwise （默认顺时针）指定的方向，从 startAngle  开始绘制，到 endAngle 结束"},{name:"CanvasRenderingContext2D.rect",description:"创建一个矩形路径，矩形的起点位置是 (x, y) ，尺寸为 width 和 height"}],"绘制路径":[{name:"CanvasRenderingContext2D.fill",description:"使用当前的样式填充子路径"},{name:"CanvasRenderingContext2D.stroke",description:"使用当前的样式描边子路径"},{name:"CanvasRenderingContext2D.drawFocusIfNeeded",description:"如果给定的元素获取了焦点，那么此方法会在当前的路径绘制一个焦点"},{name:"CanvasRenderingContext2D.clip",description:"从当前路径创建一个剪切路径。在  clip() 调用之后，绘制的所有信息只会出现在剪切路径内部。例如： 参见 Canvas教程中的 剪切路径 "},{name:"CanvasRenderingContext2D.isPointInPath",description:"判断当前路径是否包含检测点"},{name:"CanvasRenderingContext2D.isPointInStroke",description:"判断检测点是否在路径的描边线上"}],"变换":[{name:"CanvasRenderingContext2D.rotate",description:"在变换矩阵中增加旋转，角度变量表示一个顺时针旋转角度并且用弧度表示"},{name:"CanvasRenderingContext2D.scale",description:"根据 x 水平方向和 y 垂直方向，为canvas 单位添加缩放变换"},{name:"CanvasRenderingContext2D.translate",description:"通过在网格中移动 canvas 和 canvas 原点 x 水平方向、原点 y 垂直方向，添加平移变换"},{name:"CanvasRenderingContext2D.transform",description:"使用方法参数描述的矩阵多次叠加当前的变换矩阵"},{name:"CanvasRenderingContext2D.setTransform",description:"重新设置当前的变换为单位矩阵，并使用同样的变量调用 transform() 方法"}],"合成":[{name:"CanvasRenderingContext2D.globalAlpha",description:"在合成到 canvas 之前，设置图形和图像透明度的值。默认 1.0 (不透明)"},{name:"CanvasRenderingContext2D.globalCompositeOperation",description:"通过 globalAlpha 应用，设置如何在已经存在的位图上绘制图形和图像"}],"绘制图像":[{name:"CanvasRenderingContext2D.drawImage",description:"绘制指定的图片。该方法有多种格式，提供了很大的使用灵活性"}],"像素控制":[{name:"CanvasRenderingContext2D.createImageData",description:"使用指定的尺寸，创建一个新的、空白的 ImageData 对象。所有的像素在新对象中都是透明的"},{name:"CanvasRenderingContext2D.getImageData",description:"返回一个 ImageData 对象，用来描述canvas区域隐含的像素数据，这个区域通过矩形表示，起始点为(sx, sy)、宽为sw、高为sh"},{name:"CanvasRenderingContext2D.putImageData",description:"将数据从已有的 ImageData 绘制到位图上。 如果提供了脏矩形，只能绘制矩形的像素"}],"canvas 状态":[{name:"CanvasRenderingContext2D.save",description:"使用栈保存当前的绘画样式状态，你可以使用 restore() 恢复任何改变"},{name:"CanvasRenderingContext2D.restore",description:"恢复到最近的绘制样式状态，此状态是通过 save() 保存到”状态栈“中最新的元素"},{name:"CanvasRenderingContext2D.canvas",description:"对 HTMLCanvasElement 只读的反向引用。如果和 <canvas> 元素没有联系，可能为null"}]}},"CanvasRenderingContext2D.clearRect":{title:"CanvasRenderingContext2D.clearRect()",description:"是 Canvas 2D API 设置指定矩形区域内（以 点 (x, y) 为起点，范围是(width, height) ）所有像素变成透明，并擦除之前绘制的所有内容的方法<deCode>",param:{x:{description:"矩形起点的 x 轴坐标"},y:{description:"矩形起点的 y 轴坐标"},width:{description:"矩形的宽度"},height:{description:"矩形的高度"}},deCode:["void ctx.clearRect(x, y, width, height);"],caseCode:{"矩形":"ctx.beginPath();\nctx.moveTo(20,20);\nctx.lineTo(200,20);\nctx.lineTo(120,120);\nctx.closePath(); // 关闭路径\nctx.stroke();\n\nctx.clearRect(10, 10, 100, 100);"}},"CanvasRenderingContext2D.fillRect":{title:"CanvasRenderingContext2D.fillRect()",description:"是Canvas 2D API 绘制填充矩形的方法。矩形的起点在 (x, y) 位置，矩形的尺寸是 width 和 height ，fillStyle 属性决定矩形的样式<deCode>",deCode:["void ctx.fillRect(x, y, width, height);"],param:{x:{description:"矩形起点的 x 轴坐标"},y:{description:"矩形起点的 y 轴坐标"},width:{description:"矩形的宽度"},height:{description:"矩形的高度"}},caseCode:{"矩形填充":'ctx.fillStyle = "green";\nctx.fillRect(10, 10, 100, 100);'}},"CanvasRenderingContext2D.strokeRect":{title:"CanvasRenderingContext2D.strokeRect()",description:"Canvas 2D API 在 canvas 中，使用当前的绘画样式，描绘一个起点在 (x, y) 、宽度为 w 、高度为 h 的矩形的方法,此方法直接绘制到画布而不修改当前路径，因此任何后续fill() 或stroke()调用对它没有影响<deCode>",deCode:["void ctx.strokeRect(x, y, width, height);"],param:{x:{description:"矩形起点的 x 轴坐标"},y:{description:"矩形起点的 y 轴坐标"},width:{description:"矩形的宽度,正值在右侧，负值在左侧"},height:{description:"矩形的高度,正值在下，负值在上"}},caseCode:{"矩形描边":"ctx.strokeStyle = 'green';\nctx.strokeRect(20, 10, 160, 100);"}},"CanvasRenderingContext2D.fillText":{title:"CanvasRenderingContext2D.fillText()",description:"是 Canvas 2D API 在 (x, y)位置填充文本的方法。如果选项的第四个参数提供了最大宽度，文本会进行缩放以适应最大宽度。参见 CanvasRenderingContext2D.strokeText() 方法对文本进行描边<deCode>",deCode:["void ctx.fillText(text, x, y [, maxWidth]);"],param:{text:{description:"使用当前的 font, textAlign, textBaseline 和 direction 值对文本进行渲染"},x:{description:"文本起点的 x 轴坐标"},y:{description:"文本起点的 y 轴坐标"},maxWidth:{description:"绘制的最大宽度。如果指定了值，并且经过计算字符串的值比最大宽度还要宽，字体为了适应会水平缩放（如果通过水平缩放当前字体，可以进行有效的或者合理可读的处理）或者使用小号的字体"}},caseCode:{"文字":'ctx.font = "48px serif";\nctx.fillText("Hello world", 50, 100);'}},"CanvasRenderingContext2D.strokeText":{title:"CanvasRenderingContext2D.strokeText()",description:"是 Canvas 2D API 在给定的 (x, y) 位置绘制文本的方法。如果提供了表示最大值的第四个参数，文本将会缩放适应宽度。参见 CanvasRenderingContext2D.fillText() 方法填充文本<deCode>",deCode:["void ctx.strokeText(text, x, y [, maxWidth]);"],param:{text:{description:"使用当前的 font, textAlign, textBaseline 和 direction 值对文本进行渲染"},x:{description:"文本起点的 x 轴坐标"},y:{description:"文本起点的 y 轴坐标"},maxWidth:{description:"绘制的最大宽度。如果指定了值，并且经过计算字符串的值比最大宽度还要宽，字体为了适应会水平缩放（如果通过水平缩放当前字体，可以进行有效的或者合理可读的处理）或者使用小号的字体"}},caseCode:{"文字填充":'ctx.font = "48px serif";\nctx.strokeText("Hello world", 50, 100);'}},"CanvasRenderingContext2D.measureText":{title:"CanvasRenderingContext2D.measureText()",description:"方法返回一个关于被测量文本TextMetrics 对象包含的信息（例如它的宽度）。<deCode>",deCode:["ctx.measureText(text);"],param:{text:{description:"text需要测量的String "}},caseCode:{"文字填充":'var text = ctx.measureText("foo"); // TextMetrics object\ntext.width;'}},"CanvasRenderingContext2D.lineWidth":{title:"CanvasRenderingContext2D.lineWidth",description:"表示线条宽度,默认值是1.0,如果是负数,0,NAN或者Infinity都会被忽略<deCode>",deCode:["context.lineWidth = value"],param:{value:{description:"描述线段宽度的数字。 0、 负数、 Infinity 和 NaN 会被忽略"}},caseCode:{"线条宽度":"ctx.lineWidth = 15;\n\nctx.beginPath();\nctx.moveTo(20, 20);\nctx.lineTo(130, 130);\nctx.rect(40, 40, 70, 70);\nctx.stroke();"}},"CanvasRenderingContext2D.lineCap":{title:"CanvasRenderingContext2D.lineCap",description:"Canvas 2D API 指定如何绘制每一条线段末端的属性。有3个可能的值，分别是：butt, round and square。默认值是 butt<deCode>",deCode:['ctx.lineCap = "butt";\nctx.lineCap = "round";\nctx.lineCap = "square";'],param:{butt:{description:"线段末端以方形结束"},round:{description:"线段末端以圆形结束"},square:{description:"线段末端以方形结束，但是增加了一个宽度和线段相同，高度是线段厚度一半的矩形区域"}},caseCode:{"三种对比":"var lineCap = ['butt','round','square'];\n\n// Draw guides\nctx.strokeStyle = '#09f';\nctx.beginPath();\nctx.moveTo(10,10);\nctx.lineTo(140,10);\nctx.moveTo(10,140);\nctx.lineTo(140,140);\nctx.stroke();\n\n// Draw lines\nctx.strokeStyle = 'black';\nfor (var i = 0; i < lineCap.length; i++) {\n  ctx.lineWidth = 15;\n  ctx.lineCap = lineCap[i];\n  ctx.beginPath();\n  ctx.moveTo(25+i*50,10);\n  ctx.lineTo(25+i*50,140);\n  ctx.stroke();\n}","方形":'ctx.beginPath();\nctx.moveTo(0,0);\nctx.lineWidth = 15;\nctx.lineCap = "butt";\nctx.lineTo(100, 100);\nctx.stroke();',"圆形":'ctx.beginPath();\nctx.moveTo(0,0);\nctx.lineWidth = 15;\nctx.lineCap = "round";\nctx.lineTo(100, 100);\nctx.stroke();',"加长方形":'ctx.beginPath();\nctx.moveTo(0,0);\nctx.lineWidth = 15;\nctx.lineCap = "square";\nctx.lineTo(100, 100);\nctx.stroke();'}},"CanvasRenderingContext2D.lineJoin":{title:"CanvasRenderingContext2D.lineJoin",description:"是 Canvas 2D API 用来设置2个长度不为0的相连部分（线段，圆弧，曲线）如何连接在一起的属性（长度为0的变形部分，其指定的末端和控制点在同一位置，会被忽略）<deCode>",deCode:['ctx.lineJoin = "bevel";\nctx.lineJoin = "round";\nctx.lineJoin = "miter";'],param:{round:{description:"通过填充一个额外的，圆心在相连部分末端的扇形，绘制拐角的形状。 圆角的半径是线段的宽度"},bevel:{description:"在相连部分的末端填充一个额外的以三角形为底的区域， 每个部分都有各自独立的矩形拐角"},miter:{description:"通过延伸相连部分的外边缘，使其相交于一点，形成一个额外的菱形区域。这个设置可以通过 miterLimit 属性看到效果"}},caseCode:{"三种线条对比":"var lineJoin = ['round','bevel','miter'];\nctx.lineWidth = 10;\n\nfor (var i = 0; i < lineJoin.length; i++) {\n  ctx.lineJoin = lineJoin[i];\n  ctx.beginPath();\n  ctx.moveTo(-5,5+i*40);\n  ctx.lineTo(35,45+i*40);\n  ctx.lineTo(75,5+i*40);\n  ctx.lineTo(115,45+i*40);\n  ctx.lineTo(155,5+i*40);\n  ctx.stroke();\n}","默认拐角":'ctx.lineWidth = 10;\nctx.lineJoin = "round";\nctx.beginPath();\nctx.moveTo(0,0);\nctx.lineTo(200, 100);\nctx.lineTo(300,0);\nctx.stroke();'}},"CanvasRenderingContext2D.miterLimit":{title:"CanvasRenderingContext2D.miterLimit",description:"是 Canvas 2D API 设置斜接面限制比例的属性。 当获取属性值时， 会返回当前的值（默认值是10.0 ）。当给属性赋值时， 0、负数、 Infinity 和 NaN 都会被忽略；除此之外都会被赋予一个新值<deCode>",deCode:["ctx.miterLimit = value;",'ctx.lineJoin = "miter"  // "miter" >   "round" )   "bevel" ]'],param:{value:{description:"斜接面限制比例的的数字。 0、负数、Infinity 和 NaN 都会被忽略。<deCode>只有当 lineJoin 显示为 >  时，miterLimit 才有效。边角的角度越小，斜接长度就会越大。为了避免斜接长度过长，我们可以使用 miterLimit 属性。如果斜接长度超过 miterLimit 的值，边角会以 lineJoin 的 ] 类型来显示"}},caseCode:{"默认":"// Clear canvas\n  ctx.clearRect(0, 0, 150, 150);\n \n  // Draw guides\n  ctx.strokeStyle = '#09f';\n  ctx.lineWidth   = 2;\n  ctx.strokeRect(5, 50, 160, 50);\n \n  // Set line styles\n  ctx.strokeStyle = '#000';\n  ctx.lineWidth = 10;\n \n  // check input\n    ctx.miterLimit = 10;\n \n  // Draw lines\n  ctx.beginPath();\n  ctx.moveTo(0, 100);\n  for (var i = 0; i < 24 ; i++) {\n    var dy = i % 2 == 0 ? 25 : -25;\n    ctx.lineTo(Math.pow(i, 1.5) * 2, 75 + dy);\n  }\n  ctx.stroke();"}},"CanvasRenderingContext2D.getLineDash":{title:"CanvasRenderingContext2D.getLineDash()",description:"是 Canvas 2D API 获取当前线段样式的方法<deCode>",deCode:["ctx.getLineDash()"],param:{callback:{description:"一个 Array数组。一组描述交替绘制线段和间距（坐标空间单位）长度的数字。如果数组元素的数量是奇数，数组元素会被复制并重复。 例如， 设置线段为 [5, 15, 25] 将会得到以下返回值 [5, 15, 25, 5, 15, 25]"}},caseCode:{"获取虚线间隔":"ctx.setLineDash([5, 15]);\nconsole.log(ctx.getLineDash()); // [5, 15]\n\nctx.beginPath();\nctx.moveTo(0,100);\nctx.lineTo(400, 100);\nctx.stroke();"}},"CanvasRenderingContext2D.setLineDash":{title:"CanvasRenderingContext2D.setLineDash()",description:"setLineDash()方法在填充线时使用虚线模式。 它使用一组值来指定描述模式的线和间隙的交替长度<deCode>",deCode:["ctx.setLineDash(segments);"],param:{segments:{description:"一个Array数组。一组描述交替绘制线段和间距（坐标空间单位）长度的数字。 如果数组元素的数量是奇数， 数组的元素会被复制并重复。例如， [5, 15, 25] 会变成 [5, 15, 25, 5, 15, 25]"}},caseCode:{"设置虚线间隔":"// Dashed line\nctx.beginPath();\nctx.setLineDash([5, 15]);\nctx.moveTo(0, 50);\nctx.lineTo(300, 50);\nctx.stroke();\n\n// Solid line\nctx.beginPath();\nctx.setLineDash([]);\nctx.moveTo(0, 100);\nctx.lineTo(300, 100);\nctx.stroke();"}},"CanvasRenderingContext2D.lineDashOffset":{title:"CanvasRenderingContext2D.lineDashOffset",description:"是 Canvas 2D API 设置虚线偏移量的属性，例如可以实现 “蚂蚁线“ 的效果<deCode>",deCode:["ctx.lineDashOffset = value"],param:{value:{description:"偏移量是float精度的数字。 初始值为 0.0"}},caseCode:{"虚线":"ctx.setLineDash([4, 16]);\nctx.lineDashOffset = 2;\n\nctx.beginPath();\nctx.moveTo(0,100);\nctx.lineTo(400, 100);\nctx.stroke();"}},"CanvasRenderingContext2D.font":{title:"CanvasRenderingContext2D.font",description:"是 Canvas 2D API 描述绘制文字时，当前字体样式的属性。 使用和 CSS font 规范相同的字符串值<deCode>",deCode:["ctx.font = value"],param:{value:{description:"符合CSS font 语法的DOMString 字符串。默认字体是 10px sans-serif"}},caseCode:{"文字":'ctx.font = "48px serif";\nctx.strokeText("Hello world", 50, 100);'}},"CanvasRenderingContext2D.textAlign":{title:"CanvasRenderingContext2D.textAlign",description:"是 Canvas 2D API 描述绘制文本时，文本的对齐方式的属性。注意，该对齐是基于CanvasRenderingContext2D.fillText方法的x的值。所以如果textAlign='center'，那么该文本将画在 x-50%*width,注:这里的textAlign='center'比较特殊。textAlign的值为center时候文本的居中是基于你在fillText的时候所给的x的值，也就是说文本一半在x的左边，一半在x的右边（可以理解为计算x的位置时从默认文字的左端，改为文字的中心，因此你只需要考虑x的位置即可）。所以，如果你想让文本在整个canvas居中，就需要将fillText的x值设置成canvas的宽度的一半<deCode>direction属性会对此属性产生影响。如果direction属性设置为ltr，则left和start的效果相同，right和end的效果相同；如果direction属性设置为rtl，则left和end的效果相同，right和start的效果相同",deCode:['ctx.textAlign = "left" || "right" || "center" || "start" || "end"'],param:{left:{description:"文本左对齐"},right:{description:"文本右对齐"},center:{description:"文本居中对齐"},start:{description:"文本对齐界线开始的地方 （左对齐指本地从左向右，右对齐指本地从右向左）"},end:{description:"文本对齐界线结束的地方 （左对齐指本地从左向右，右对齐指本地从右向左）"}},caseCode:{"文本对齐":'ctx.font = "48px serif";\nctx.textAlign = "left";\nctx.strokeText("Hello world", 0, 100);'}},"CanvasRenderingContext2D.textBaseline":{title:"CanvasRenderingContext2D.textBaseline",description:"是 Canvas 2D API 描述绘制文本时，当前文本基线的属性<deCode>",deCode:['ctx.textBaseline = "top" || "hanging" || "middle" || "alphabetic" || "ideographic" || "bottom"'],param:{top:{description:"文本基线在文本块的顶部"},hanging:{description:"文本基线是悬挂基线"},middle:{description:"文本基线在文本块的中间"},alphabetic:{description:"文本基线是标准的字母基线"},ideographic:{description:"文字基线是表意字基线；如果字符本身超出了alphabetic 基线，那么ideograhpic基线位置在字符本身的底部"},bottom:{description:"文本基线在文本块的底部。 与 ideographic 基线的区别在于 ideographic 基线不需要考虑下行字母"}},caseCode:{"文本上下居中":'ctx.font = "48px serif";\nctx.textBaseline = "hanging";\nctx.strokeText("Hello world", 0, 100);'}},"CanvasRenderingContext2D.fillStyle":{title:"CanvasRenderingContext2D.fillStyle",description:"是Canvas 2D API 使用内部方式描述颜色和样式的属性。默认值是 #000 （黑色）<deCode>",deCode:["ctx.fillStyle = color;\nctx.fillStyle = gradient;\nctx.fillStyle = pattern;"],param:{color:{description:"DOMString 字符串，被转换成 CSS <color> 颜色值"},gradient:{description:"CanvasGradient 对象 （线性渐变或者放射性渐变）"},pattern:{description:"CanvasPattern 对象 （可重复图像）"}},caseCode:{"颜色填充":'ctx.fillStyle = "blue";\nctx.fillRect(10, 10, 100, 100);',"颜色过渡":"for (var i=0;i<6;i++){\n  for (var j=0;j<6;j++){\n    ctx.fillStyle = 'rgb(' + Math.floor(255-42.5*i) + ',' +\n                     Math.floor(255-42.5*j) + ',0)';\n    ctx.fillRect(j*25,i*25,25,25);\n  }\n}"}},"CanvasRenderingContext2D.strokeStyle":{title:"CanvasRenderingContext2D.strokeStyle",description:"是 Canvas 2D API 描述画笔（绘制图形）颜色或者样式的属性。默认值是 #000 (black)<deCode>",deCode:["ctx.strokeStyle = color;\nctx.strokeStyle = gradient;\nctx.strokeStyle = pattern;"],param:{color:{description:"DOMString 字符串，被转换成 CSS <color> 颜色值"},gradient:{description:"CanvasGradient 对象 （线性渐变或者放射性渐变）"},pattern:{description:"CanvasPattern 对象 （可重复图像）"}},caseCode:{"描边填充":'ctx.strokeStyle = "blue";\nctx.strokeRect(10, 10, 100, 100);',"多描边填充":"for (var i=0;i<6;i++){\n  for (var j=0;j<6;j++){\n    ctx.strokeStyle = 'rgb(0,' + Math.floor(255-42.5*i) + ',' + \n                      Math.floor(255-42.5*j) + ')';\n    ctx.beginPath();\n    ctx.arc(12.5+j*25,12.5+i*25,10,0,Math.PI*2,true);\n    ctx.stroke();\n  }\n}"}},CanvasGradient:{title:"CanvasGradient",description:"接口表示描述渐变的不透明对象。通过 CanvasRenderingContext2D.createLinearGradient() 或 CanvasRenderingContext2D.createRadialGradient() 的返回值得到",function:[{name:"CanvasGradient.addColorStop",description:"添加一个由偏移(offset)和颜色(color)定义的断点到渐变中。如果偏移值不在0到1之间，将抛出INDEX_SIZE_ERR错误，如果颜色值不能被解析为有效的CSS颜色值 <color>，将抛出SYNTAX_ERR错误"}]},"CanvasGradient.addColorStop":{title:"CanvasGradient.addColorStop()",description:"方法添加一个由偏移值和颜色值指定的断点到渐变。如果偏移值不在0到1之间，将抛出INDEX_SIZE_ERR错误，如果颜色值不能被解析为有效的CSS颜色值 <color>，将抛出SYNTAX_ERR错误<deCode>",deCode:["gradient.addColorStop(offset, color)"],param:{offset:{description:"0到1之间的值，超出范围将抛出INDEX_SIZE_ERR错误"},color:{description:"CSS颜色值 <color>。如果颜色值不能被解析为有效的CSS颜色值 <color>，将抛出SYNTAX_ERR错误"}},caseCode:{"渐变":'var gradient = ctx.createLinearGradient(0,0,200,0);\ngradient.addColorStop(0,"green");\ngradient.addColorStop(1,"white");\nctx.fillStyle = gradient;\nctx.fillRect(10,10,200,100);'}},"CanvasRenderingContext2D.createLinearGradient":{title:"CanvasRenderingContext2D.createLinearGradient()",description:"方法创建一个沿参数坐标指定的直线的渐变。该方法返回一个线性 CanvasGradient对象<deCode>",deCode:["CanvasGradient ctx.createLinearGradient(x0, y0, x1, y1);"],param:{x0:{description:"起点的 x 轴坐标"},y0:{description:"起点的 y 轴坐标"},x1:{description:"终点的 x 轴坐标"},y1:{description:"终点的 y 轴坐标"},callback:{description:"一个根据指定线路初始化的线性 CanvasGradient 对象"}},caseCode:{"渐变":'var gradient = ctx.createLinearGradient(0,0,200,0);\ngradient.addColorStop(0,"green");\ngradient.addColorStop(1,"white");\nctx.fillStyle = gradient;\nctx.fillRect(10,10,200,100);'}},"CanvasRenderingContext2D.createRadialGradient":{title:"CanvasRenderingContext2D.createRadialGradient",description:"是 Canvas 2D API 根据参数确定两个圆的坐标，绘制放射性渐变的方法。这个方法返回 CanvasGradient<deCode>使用 createRadialGradient 方法创建一个指定了开始和结束圆的 CanvasGradient 对象。 一旦创建，你可以使用 CanvasGradient.addColorStop() 方法根据指定的偏移和颜色定义一个新的终止。你可以将当前的fillStyle设置成此渐变， 当使用fillRect() 方法时，会在canvas上绘制出效果， 如示例所示",deCode:["CanvasGradient ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);"],param:{x0:{description:"开始圆形的 x 轴坐标"},y0:{description:"开始圆形的 y 轴坐标"},r0:{description:"开始圆形的半径"},x1:{description:"结束圆形的 x 轴坐标"},y1:{description:"结束圆形的 y 轴坐标"},r1:{description:"结束圆形的半径"},callback:{description:"由两个指定的圆初始化的放射性 CanvasGradient 对象"}},caseCode:{"圆形渐变":'var gradient = ctx.createRadialGradient(100,100,100,100,100,0);\ngradient.addColorStop(0,"white");\ngradient.addColorStop(1,"green");\nctx.fillStyle = gradient;\nctx.fillRect(0,0,200,200);'}},"CanvasRenderingContext2D.createPattern":{title:"CanvasRenderingContext2D.createPattern()",description:"是 Canvas 2D API 使用指定的图像 (CanvasImageSource)创建模式的方法。 它通过repetition参数在指定的方向上重复元图像。此方法返回一个CanvasPattern对象<deCode>使用 createPattern 方法创建一个指定图像和重复的CanvasPattern 对象。创建完成后，可以使用CanvasPattern.setTransform()方法对图案进行变形。如示例所示，你可以把此模式赋值给当前的fillStyle，当你使用fillRect() 方法时，会在 canvas 上绘制出效果",deCode:["CanvasPattern ctx.createPattern(image, repetition);","HTMLImageElement (<img>),\nHTMLVideoElement (<video>),\nHTMLCanvasElement (<canvas>),\nCanvasRenderingContext2D,\nImageBitmap,\nImageData,\nBlob.",'"repeat" (both directions),\n"repeat-x" (horizontal only),\n"repeat-y" (vertical only), \n"no-repeat" (neither).'],param:{image:{description:"作为重复图像源的 CanvasImageSource 对象。可以是下列之一：<deCode>"},repetition:{description:"DOMString，指定如何重复图像。允许的值有<deCode>如果为空字符串 ('') 或 null (但不是 undefined)，repetition将被当作'repeat'"},callback:{description:"描述模式的不透明对象"}},caseCode:{"背景图片":"var img = new Image();\nimg.src = 'https://mdn.mozillademos.org/files/222/Canvas_createpattern.png';\nimg.onload = function() {\n  var pattern = ctx.createPattern(img, 'repeat');\n  ctx.fillStyle = pattern;\n  ctx.fillRect(0,0,400,400);\n}"}},"CanvasRenderingContext2D.shadowBlur":{title:"CanvasRenderingContext2D.shadowBlur",description:"是 Canvas 2D API 描述模糊效果程度的属性； 它既不对应像素值也不受当前转换矩阵的影响。 默认值是 0<deCode>",deCode:["ctx.shadowBlur = level"],param:{level:{description:"描述模糊效果程度的，float 类型的值。默认值是 0。 负数、 Infinity 或者 NaN 都会被忽略"}},caseCode:{"阴影模糊":'ctx.shadowColor = "black";\nctx.shadowBlur = 10;\n\nctx.fillStyle = "white";\nctx.fillRect(10, 10, 100, 100);'}},"CanvasRenderingContext2D.shadowColor":{title:"CanvasRenderingContext2D.shadowColor",description:"Canvas 2D API 描述阴影颜色的属性<deCode>",deCode:["ctx.shadowColor = color"],param:{color:{description:"可以转换成 CSS <color> 值的DOMString 字符串。 默认值是 fully-transparent black"}},caseCode:{"阴影颜色":'ctx.shadowColor = "black";\nctx.shadowOffsetY = 10;\nctx.shadowOffsetX = 10;\n\nctx.fillStyle = "green"\nctx.fillRect(10, 10, 100, 100);'}},"CanvasRenderingContext2D.shadowOffsetX":{title:"CanvasRenderingContext2D.shadowOffsetX",description:"Canvas 2D API 描述阴影水平偏移距离的属性<deCode>",deCode:["ctx.shadowOffsetX = offset;"],param:{offset:{description:"阴影水平偏移距离的float类型的值。默认值是 0。  Infinity 或者NaN都会被忽略"}},caseCode:{"阴影偏移":'ctx.shadowColor = "black";\nctx.shadowOffsetX = 10;\nctx.shadowBlur = 10;\n\nctx.fillStyle = "green";\nctx.fillRect(10, 10, 100, 100);'}},"CanvasRenderingContext2D.shadowOffsetY":{title:"CanvasRenderingContext2D.shadowOffsetY",description:"Canvas 2D API 描述阴影垂直偏移距离的属性<deCode>",deCode:["ctx.shadowOffsetY = offset"],param:{offset:{description:"阴影垂直偏移距离的float类型的值。 默认值是 0。  Infinity 或者NaN 都会被忽略"}},caseCode:{"阴影垂直偏移":'ctx.shadowColor = "black";\nctx.shadowOffsetY = 10;\nctx.shadowBlur = 10;\n\nctx.fillStyle = "green";\nctx.fillRect(10, 10, 100, 100);'}},"CanvasRenderingContext2D.beginPath":{title:"CanvasRenderingContext2D.beginPath()",description:"是 Canvas 2D API 通过清空子路径列表开始一个新路径的方法。 当你想创建一个新的路径时，调用此方法<deCode>",deCode:["void ctx.beginPath()"],caseCode:{"两段线段":"// First path\nctx.beginPath();\nctx.strokeStyle = 'blue';\nctx.moveTo(20,20);\nctx.lineTo(200,20);\nctx.stroke();\n\n// Second path\nctx.beginPath();\nctx.strokeStyle = 'green';\nctx.moveTo(20,20);\nctx.lineTo(120,120);\nctx.stroke();"}},"CanvasRenderingContext2D.closePath":{title:"CanvasRenderingContext2D.closePath()",description:"Canvas 2D API 将笔点返回到当前子路径起始点的方法。它尝试从当前点到起始点绘制一条直线。 如果图形已经是封闭的或者只有一个点，那么此方法不会做任何操作<deCode>",caseCode:{"闭合路径":"ctx.beginPath();\nctx.moveTo(20,20);\nctx.lineTo(200,20);\nctx.lineTo(120,120);\nctx.closePath(); // draws last line of the triangle\nctx.stroke();"}},"CanvasRenderingContext2D.moveTo":{title:"CanvasRenderingContext2D.moveTo()",description:"是 Canvas 2D API 将一个新的子路径的起始点移动到(x，y)坐标的方法<deCode>",deCode:["void ctx.moveTo(x, y)"],param:{x:{description:"点的 x 轴"},y:{description:"点的 y 轴"}},caseCode:{"移动起点":"ctx.beginPath();\nctx.moveTo(50,50);\nctx.lineTo(200, 50);\nctx.stroke();"}},"CanvasRenderingContext2D.lineTo":{title:"CanvasRenderingContext2D.lineTo()",description:"是 Canvas 2D API 使用直线连接子路径的终点到x，y坐标的方法（并不会真正地绘制）<deCode>",deCode:["void ctx.lineTo(x, y);"],param:{x:{description:"直线终点的 x 轴坐标"},y:{description:"直线终点的 y 轴坐标"}},caseCode:{"绘制直线":"ctx.beginPath();\nctx.moveTo(0,0);\nctx.lineTo(100, 100);\nctx.stroke();"}},"CanvasRenderingContext2D.bezierCurveTo":{title:"CanvasRenderingContext2D.bezierCurveTo()",description:"是 Canvas 2D API 绘制三次贝赛尔曲线路径的方法。 该方法需要三个点。 第一、第二个点是控制点，第三个点是结束点。起始点是当前路径的最后一个点，绘制贝赛尔曲线前，可以通过调用 moveTo() 进行修改<deCode>这是一段绘制贝赛尔曲线的简单的代码片段。  控制点是红色的， 开始和结束点是蓝色的",deCode:["void ctx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)"],param:{cp1x:{description:"第一个控制点的 x 轴坐标"},cp1y:{description:"第一个控制点的 y 轴坐标"},cp2x:{description:"第二个控制点的 x 轴坐标"},cp2y:{description:"第二个控制点的 y 轴坐标"},x:{description:"结束点的 x 轴坐标"},y:{description:"结束点的 y 轴坐标"}},caseCode:{"三次贝塞尔曲线":"ctx.beginPath();\nctx.moveTo(50,20);\nctx.bezierCurveTo(230, 30, 150, 60, 50, 100);\nctx.stroke();\n\nctx.fillStyle = 'blue';\n// start point\nctx.fillRect(50, 20, 10, 10);\n// end point\nctx.fillRect(50, 100, 10, 10);\n\nctx.fillStyle = 'red';\n// control point one\nctx.fillRect(230, 30, 10, 10);\n// control point two\nctx.fillRect(150, 70, 10, 10);"}},"CanvasRenderingContext2D.quadraticCurveTo":{title:"CanvasRenderingContext2D.quadraticCurveTo()",description:"是 Canvas 2D API 新增二次贝塞尔曲线路径的方法。它需要2个点。 第一个点是控制点，第二个点是终点。 起始点是当前路径最新的点，当创建二次贝赛尔曲线之前，可以使用 moveTo() 方法进行改变<deCode>这是一段绘制二次贝赛尔曲线的简单的代码片段。 控制点是红色，起点和终点是蓝色",deCode:["void ctx.quadraticCurveTo(cpx, cpy, x, y)"],param:{cpx:{description:"控制点的 x 轴坐标"},cpy:{description:"控制点的 y 轴坐标"},x:{description:"终点的 x 轴坐标"},y:{description:"终点的 y 轴坐标"}},caseCode:{"二次贝塞尔曲线":"ctx.beginPath();\nctx.moveTo(50,20);\nctx.quadraticCurveTo(230, 30, 50, 100);\nctx.stroke();\n\nctx.fillStyle = 'blue';\n// start point\nctx.fillRect(50, 20, 10, 10);\n// end point\nctx.fillRect(50, 100, 10, 10);\n\nctx.fillStyle = 'red';\n// control point\nctx.fillRect(230, 30, 10, 10);"}},"CanvasRenderingContext2D.arc":{title:"CanvasRenderingContext2D.arc()",description:"Canvas 2D API 绘制圆弧路径的方法。 圆弧路径的圆心在 (x, y) 位置，半径为 r ，根据anticlockwise （默认为顺时针）指定的方向从 startAngle 开始绘制，到 endAngle 结束<deCode>",deCode:["ctx.arc(x, y, radius, startAngle, endAngle, anticlockwise)"],param:{x:{description:"圆弧中心（圆心）的 x 轴坐标"},y:{description:"圆弧中心（圆心）的 y 轴坐标"},radius:{description:"圆弧的半径"},startAngle:{description:"圆弧的起始点， x轴方向开始计算，单位以弧度表示"},endAngle:{description:"圆弧的终点， 单位以弧度表示"},anticlockwise:{description:"该参数是一个可选存对象参数,可选的Boolean值 ，如果为 true，逆时针绘制圆弧，反之，顺时针绘制"}},caseCode:{"圆弧":"ctx.beginPath();\nctx.arc(75, 75, 50, 0, Math.PI);\nctx.stroke();","多种圆弧":"for (var i=0;i<4;i++){\n  for(var j=0;j<3;j++){\n    ctx.beginPath();\n    var x          = 25+j*50;               // x coordinate\n    var y          = 25+i*50;               // y coordinate\n    var radius     = 20;                    // Arc radius\n    var startAngle = 0;                     // Starting point on circle\n    var endAngle   = Math.PI+(Math.PI*j)/2; // End point on circle\n    var clockwise  = i%2==0 ? false : true; // clockwise or anticlockwise\n   \n    ctx.arc(x,y,radius,startAngle,endAngle, clockwise);\n   \n    if (i>1){\n      ctx.fill();\n    } else {\n      ctx.stroke();\n    }\n  }\n}"}},"CanvasRenderingContext2D.arcTo":{title:"CanvasRenderingContext2D.arcTo()",description:"是 Canvas 2D API 根据控制点和半径绘制圆弧路径，使用当前的描点(前一个moveTo或lineTo等函数的止点)。根据当前描点与给定的控制点1连接的直线，和控制点1与控制点2连接的直线，作为使用指定半径的圆的切线，画出两条切线之间的弧线路径<deCode>这是一段绘制圆弧的简单的代码片段。 基础点是蓝色的，两个控制点是红色的",deCode:["void ctx.arcTo(x1, y1, x2, y2, radius);"],param:{x1:{description:"第一个控制点的 x 轴坐标"},y1:{description:"第一个控制点的 y 轴坐标"},x2:{description:"第二个控制点的 x 轴坐标"},y2:{description:"第二个控制点的 y 轴坐标"},radius:{description:"圆弧的半径"}},caseCode:{"圆弧":"ctx.setLineDash([])\nctx.beginPath();\nctx.moveTo(150, 20);\nctx.arcTo(150,100,50,20,30);\nctx.stroke();\n\nctx.fillStyle = 'blue';\n// base point\nctx.fillRect(150, 20, 10, 10);\n\nctx.fillStyle = 'red';\n// control point one\nctx.fillRect(150, 100, 10, 10);\n// control point two\nctx.fillRect(50, 20, 10, 10);\n//\nctx.setLineDash([5,5])\nctx.moveTo(150, 20);\nctx.lineTo(150,100);\nctx.lineTo(50, 20);\nctx.stroke();\nctx.beginPath();\nctx.arc(120,38,30,0,2*Math.PI);\nctx.stroke();"}},"CanvasRenderingContext2D.ellipse":{title:"CanvasRenderingContext2D.ellipse()",description:"是 Canvas 2D API 添加椭圆路径的方法。椭圆的圆心在（x,y）位置，半径分别是radiusX 和 radiusY ，按照anticlockwise（默认顺时针）指定的方向，从 startAngle  开始绘制，到 endAngle 结束<deCode>",deCode:["void ctx.ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise)"],param:{x:{description:"椭圆圆心的 x 轴坐标"},y:{description:"椭圆圆心的 y 轴坐标"},radiusX:{description:"椭圆长轴的半径"},radiusY:{description:"椭圆短轴的半径"},rotation:{description:"椭圆的旋转角度，以弧度表示(非角度度数)"},startAngle:{description:"将要绘制的起始点角度，从 x 轴测量，以弧度表示(非角度度数)"},endAngle:{description:"椭圆将要绘制的结束点角度，以弧度表示(非角度度数)"},anticlockwise:{description:"可选,Boolean 选项，如果为 true，逆时针方向绘制椭圆 （逆时针）， 反之顺时针方向绘制"}},caseCode:{"椭圆":"ctx.setLineDash([]);\nctx.beginPath();\nctx.ellipse(100, 100, 50, 75, 45 * Math.PI/180, 0, 2 * Math.PI); //倾斜45°角\nctx.stroke();\nctx.setLineDash([5]);\nctx.moveTo(0,200);\nctx.lineTo(200,0);\nctx.stroke();"}},"CanvasRenderingContext2D.rect":{title:"CanvasRenderingContext2D.rect()",description:"是 Canvas 2D API 创建矩形路径的方法，矩形的起点位置是 (x, y) ，尺寸为 width 和 height。矩形的4个点通过直线连接，子路径做为闭合的标记，所以你可以填充或者描边矩形<deCode>",deCode:["void ctx.rect(x, y, width, height)"],param:{x:{description:"矩形起点的 x 轴坐标"},y:{description:"矩形起点的 y 轴坐标"},width:{description:"矩形的宽度"},height:{description:"矩形的高度"}},caseCode:{"矩形":"ctx.rect(10, 10, 100, 100);\nctx.fill();"}},"CanvasRenderingContext2D.fill":{title:"CanvasRenderingContext2D.fill()",description:"是 Canvas 2D API 根据当前的填充样式，填充当前或已存在的路径的方法。采取非零环绕或者奇偶环绕规则<deCode>",deCode:["void ctx.fill();\nvoid ctx.fill(fillRule);\nvoid ctx.fill(path, fillRule);",'"nonzero": 非零环绕规则， 默认的规则。\n"evenodd": 奇偶环绕规则'],param:{fillRule:{description:"一种算法，决定点是在路径内还是在路径外<deCode>"}},caseCode:{"填充":"ctx.rect(10, 10, 100, 100);\nctx.fill();"}},"CanvasRenderingContext2D.stroke":{title:"CanvasRenderingContext2D.stroke()",description:"是 Canvas 2D API 使用非零环绕规则，根据当前的画线样式，绘制当前或已经存在的路径的方法<deCode>",deCode:["void ctx.stroke();\nvoid ctx.stroke(path);"],param:{path:{description:"绘制的路径Path2D"}},caseCode:{"描边路径":"ctx.rect(10, 10, 100, 100);\nctx.stroke();"}},"CanvasRenderingContext2D.drawFocusIfNeeded":{title:"CanvasRenderingContext2D.drawFocusIfNeeded()",description:"是 Canvas 2D API 用来给当前路径或特定路径绘制焦点的方法，如果给定的元素获取了焦点<deCode>",deCode:["void ctx.drawFocusIfNeeded(element);\nvoid ctx.drawFocusIfNeeded(path, element);"],param:{element:{description:"是否需要设置焦点的元素"},path:{description:"Path2D 路径"}},caseCode:{"给定焦点":'var button = document.getElementById("button");\n\nbutton.focus();\n\nctx.beginPath();\nctx.rect(10, 10, 30, 30);\nctx.drawFocusIfNeeded(button);'}},"CanvasRenderingContext2D.clip":{title:"CanvasRenderingContext2D.clip()",description:"是 Canvas 2D API 将当前创建的路径设置为当前剪切路径的方法<deCode>",deCode:["void ctx.clip();\nvoid ctx.clip(fillRule);\nvoid ctx.clip(path, fillRule);",'"nonzero": 非零环绕原则，默认的原则。\n"evenodd": 奇偶环绕原则'],param:{fillRule:{description:"这个算法判断一个点是在路径内还是在路径外<deCode>"},path:{description:"需要剪切的2D路径"}},caseCode:{"剪切弧度":"ctx.arc(100, 100, 75, 0, Math.PI*2, false);\nctx.clip();\n\nctx.fillRect(0, 0, 100,100);"}},"CanvasRenderingContext2D.isPointInPath":{title:"CanvasRenderingContext2D.isPointInPath",description:"是 Canvas 2D API 用于判断在当前路径中是否包含检测点的方法<deCode>",deCode:["boolean ctx.isPointInPath(x, y);\nboolean ctx.isPointInPath(x, y, fillRule);\n\nboolean ctx.isPointInPath(path, x, y);\nboolean ctx.isPointInPath(path, x, y, fillRule);",'"nonzero": 非零环绕原则，默认的原则。\n"evenodd": 奇偶环绕原则'],param:{x:{description:"检测点的X坐标"},y:{description:"检测点的Y坐标"},fillRule:{description:"用来决定点在路径内还是在路径外的算法<deCode>"},path:{description:"Path2D应用的路径"},callback:{description:"一个Boolean值，当检测点包含在当前或指定的路径内，返回 true；否则返回 false"}},caseCode:{"检测点":"ctx.rect(10, 10, 100, 100);\nctx.stroke();\nconsole.log(ctx.isPointInPath(10, 10)); // true"}},"CanvasRenderingContext2D.isPointInStroke":{title:"CanvasRenderingContext2D.isPointInStroke",description:"是 Canvas 2D API 用于检测某点是否在路径的描边线上的方法<deCode>",deCode:["boolean ctx.isPointInStroke(x, y);\nboolean ctx.isPointInStroke(path, x, y);"],param:{x:{description:"检测点的X坐标"},y:{description:"检测点的Y坐标"},path:{description:"Path2D应用的路径"},callback:{description:"一个布尔值，当这个点在路径的描边线上，则返回true，否则返回false"}},caseCode:{"点是否在描边上":"ctx.rect(10, 10, 100, 100);\nctx.stroke();\nconsole.log(ctx.isPointInStroke(10, 10)); // true"}},"CanvasRenderingContext2D.rotate":{title:"CanvasRenderingContext2D.rotate()",description:"是 Canvas 2D API 在变换矩阵中增加旋转的方法。角度变量表示一个顺时针旋转角度并且用弧度表示<deCode>",deCode:["void ctx.rotate(angle);"],param:{angle:{description:"顺时针旋转的弧度。如果你想通过角度值计算，可以使用公式： degree * Math.PI / 180 "}},caseCode:{"旋转":"ctx.rotate(45 * Math.PI / 180);\nctx.fillRect(70,0,100,30);\n\n// reset current transformation matrix to the identity matrix\nctx.setTransform(1, 0, 0, 1, 0, 0);"}},"CanvasRenderingContext2D.scale":{title:"CanvasRenderingContext2D.scale()",description:"是 Canvas 2D API 根据 x 水平方向和 y 垂直方向，为canvas 单位添加缩放变换的方法。默认的， 在 canvas 中一个单位实际上就是一个像素。例如，如果我们将0.5作为缩放因子，最终的单位会变成0.5像素，并且形状的尺寸会变成原来的一半。相似的方式，我们将2.0作为缩放因子，将会增大单位尺寸变成两个像素。形状的尺寸将会变成原来的两倍<deCode>",deCode:["void ctx.scale(x, y)"],param:{x:{description:"水平方向的缩放因子"},y:{description:"垂直方向的缩放因子"}},caseCode:{"缩放":'ctx.fillStyle = "green";\nctx.scale(1, 3)\nctx.fillRect(10, 10, 100, 100);'}},"CanvasRenderingContext2D.translate":{title:"CanvasRenderingContext2D.translate()",description:"是 Canvas 2D API 通过在网格中移动 canvas 和 canvas 原点 x 水平方向、原点 y 垂直方向，添加平移变换的方法<deCode>",deCode:["void ctx.translate(x, y);"],param:{x:{description:"水平方向的移动距离"},y:{description:"垂直方向的移动距离"}},caseCode:{"移动":'ctx.fillStyle = "green";\nctx.translate(50, 50);\nctx.fillRect(10, 10, 100, 100);'}},"CanvasRenderingContext2D.transform":{title:"CanvasRenderingContext2D.transform()",description:"是 Canvas 2D API 使用矩阵多次叠加当前变换的方法，矩阵由方法的参数进行描述。你可以缩放、旋转、移动和倾斜上下文。参见 setTransform() 方法，这个方法使用单位矩阵重新设置当前的变换并且会调用 transform()<deCode>",deCode:["void ctx.transform(a, b, c, d, e, f);"],param:{a:{description:"水平缩放"},b:{description:"水平倾斜"},c:{description:"垂直倾斜"},d:{description:"垂直缩放"},e:{description:"水平移动"},f:{description:"垂直移动"}},caseCode:{"自由变换":"ctx.transform(1,1,0,1,0,0);\nctx.fillRect(0,0,100,100);"}},"CanvasRenderingContext2D.setTransform":{title:"CanvasRenderingContext2D.setTransform()",description:"是 Canvas 2D API 使用单位矩阵重新设置（覆盖）当前的变换并调用变换的方法，此变换由方法的变量进行描述。参见 transform() 方法，这个方法不会覆盖当前的变换矩阵，会多次叠加变换<deCode>",deCode:["void ctx.setTransform(a, b, c, d, e, f)"],param:{a:{description:"水平缩放"},b:{description:"水平倾斜"},c:{description:"垂直倾斜"},d:{description:"垂直缩放"},e:{description:"水平移动"},f:{description:"垂直移动"}},caseCode:{"设置自由变换":"ctx.setTransform(1,1,0,1,0,0);\nctx.fillRect(0,0,100,100);"}},"CanvasRenderingContext2D.globalAlpha":{title:"CanvasRenderingContext2D.globalAlpha",description:"是 Canvas 2D API 用来描述在canvas上绘图之前，设置图形和图片透明度的属性。 数值的范围从 0.0 （完全透明）到1.0 （完全不透明）<deCode>",deCode:["ctx.globalAlpha = value;"],param:{value:{description:"数字在 0.0  （完全透明）和 1.0 （完全不透明）之间。 默认值是 1.0。 如果数值不在范围内，包括Infinity 和NaN ，无法赋值，并且 globalAlpha 会保持原有的数值"}},caseCode:{"透明":'ctx.globalAlpha = 0.5;\n\nctx.fillStyle = "blue";\nctx.fillRect(10, 10, 100, 100);\n\nctx.fillStyle = "red";\nctx.fillRect(50, 50, 100, 100);'}},"CanvasRenderingContext2D.globalCompositeOperation":{title:"CanvasRenderingContext2D.globalCompositeOperation",description:"属性设置要在绘制新形状时应用的合成操作的类型，其中type是用于标识要使用的合成或混合模式操作的字符串<deCode>",deCode:["ctx.globalCompositeOperation = type"],caseCode:{"变换混合类型":'ctx.globalCompositeOperation = "xor";\n\nctx.fillStyle = "blue";\nctx.fillRect(10, 10, 100, 100);\n\nctx.fillStyle = "red";\nctx.fillRect(50, 50, 100, 100);'}},"CanvasRenderingContext2D.drawImage":{title:"CanvasRenderingContext2D.drawImage()",description:"方法提供了多种方式在Canvas上绘制图像<deCode>",deCode:["void ctx.drawImage(image, dx, dy);\nvoid ctx.drawImage(image, dx, dy, dWidth, dHeight);\nvoid ctx.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight)","CSSImageValue，HTMLImageElement，SVGImageElement，HTMLVideoElement，HTMLCanvasElement，ImageBitmap 或者OffscreenCanvas"],param:{image:{description:"绘制到上下文的元素。允许任何的 canvas 图像源<deCode>"},sx:{description:"该参数是一个可选存对象参数,需要绘制到目标上下文中的，image的矩形（裁剪）选择框的左上角 X 轴坐标"},sy:{description:"该参数是一个可选存对象参数,需要绘制到目标上下文中的，image的矩形（裁剪）选择框的左上角 Y 轴坐标"},sWidth:{description:"该参数是一个可选存对象参数,需要绘制到目标上下文中的，image的矩形（裁剪）选择框的宽度。如果不说明，整个矩形（裁剪）从坐标的sx和sy开始，到image的右下角结束"},sHeight:{description:"该参数是一个可选存对象参数,需要绘制到目标上下文中的，image的矩形（裁剪）选择框的高度"},dx:{description:"image的左上角在目标canvas上 X 轴坐标"},dy:{description:"image的左上角在目标canvas上 Y 轴坐标"},dWidth:{description:"image在目标canvas上绘制的宽度。 允许对绘制的image进行缩放。 如果不说明， 在绘制时image宽度不会缩放"},dHeight:{description:"image在目标canvas上绘制的高度。 允许对绘制的image进行缩放。 如果不说明， 在绘制时image高度不会缩放"},callback:{description:"返回异常",INDEX_SIZE_ERR:"如果 canvas 或者图像矩形区域的宽度或高度为0",INVALID_STATE_ERR:"图像没有数据",TYPE_MISMATCH_ERR:"提供的原始元素不支持",NS_ERROR_NOT_AVAILABLE:"图像尚未加载。使用.complete === true和.onload确定何时准备就绪"}},caseCode:{"图片绘制":'var image = new Image();\nimage.src="https://mdn.mozillademos.org/files/5397/rhino.jpg"\nctx.drawImage(image, 0, 0)'}},"CanvasRenderingContext2D.createImageData":{title:"CanvasRenderingContext2D.createImageData()",description:"是 Canvas 2D API 创建一个新的、空白的、指定大小的 ImageData 对象。 所有的像素在新对象中都是透明的<deCode>",deCode:["ImageData ctx.createImageData(width, height);\nImageData ctx.createImageData(imagedata);"],param:{width:{description:"ImageData 新对象的宽度"},height:{description:"ImageData 新对象的高度"},imagedata:{description:"从现有的 ImageData 对象中，复制一个和其宽度和高度相同的对象。图像自身不允许被复制"}},callback:{description:"指定了宽度和高度的，新的 ImageData 对象。 新对象使用透明的像素进行填充",IndexSizeError:"如果宽度或者高度变量值为零，会抛出此异常"},caseCode:{"创建图片":"ctx.rect(10, 10, 100, 100);\nctx.fill();\n\nconsole.log(ctx.createImageData(100, 100)); "}},"CanvasRenderingContext2D.getImageData":{title:"CanvasRenderingContext2D.getImageData()",description:"返回一个ImageData对象，用来描述canvas区域隐含的像素数据，这个区域通过矩形表示，起始点为(sx, sy)、宽为sw、高为sh<deCode>",deCode:["ImageData ctx.getImageData(sx, sy, sw, sh)"],param:{sx:{description:"将要被提取的图像数据矩形区域的左上角 x 坐标"},sy:{description:"将要被提取的图像数据矩形区域的左上角 y 坐标"},sw:{description:"将要被提取的图像数据矩形区域的宽度"},sh:{description:"将要被提取的图像数据矩形区域的高度"},callback:{description:"一个ImageData 对象，包含canvas给定的矩形图像数据",IndexSizeError:"如果高度或者宽度变量为0，则抛出错误"}},caseCode:{"返回图像":"ctx.rect(10, 10, 100, 100);\nctx.fill();\n\nconsole.log(ctx.getImageData(50, 50, 100, 100));"}},"CanvasRenderingContext2D.putImageData":{title:"CanvasRenderingContext2D.putImageData()",description:"是 Canvas 2D API 将数据从已有的 ImageData 对象绘制到位图的方法。 如果提供了一个绘制过的矩形，则只绘制该矩形的像素。此方法不受画布转换矩阵的影响<deCode>",deCode:["void ctx.putImageData(imagedata, dx, dy);\nvoid ctx.putImageData(imagedata, dx, dy, [dirtyX, dirtyY, dirtyWidth, dirtyHeight])"],param:{imageData:{description:"ImageData ，包含像素值的数组对象"},dx:{description:"源图像数据在目标画布中的位置偏移量（x 轴方向的偏移量）"},dy:{description:"源图像数据在目标画布中的位置偏移量（y 轴方向的偏移量）"},dirtyX:{description:"该参数是一个可选存对象参数,在源图像数据中，矩形区域左上角的位置。默认是整个图像数据的左上角（x 坐标）"},dirtyY:{description:"该参数是一个可选存对象参数,在源图像数据中，矩形区域左上角的位置。默认是整个图像数据的左上角（y 坐标）"},dirtyWidth:{description:"该参数是一个可选存对象参数,在源图像数据中，矩形区域的宽度。默认是图像数据的宽度"},dirtyHeight:{description:"该参数是一个可选存对象参数,在源图像数据中，矩形区域的高度。默认是图像数据的高度"},callback:{description:"抛出异常",NotSupportedError:"如果任何一个变量被设置成无穷大，则会抛出此错误",InvalidStateError:"如果过图像数据对象的数据被分离，会抛出此错误"}},caseCode:{"移动图片":"ctx.fillRect(0,0,100,100);\n// Create an ImageData object from it\nvar imagedata = ctx.getImageData(0,0,100,100);\nctx. putImageData(imagedata, 100,0)"}},"CanvasRenderingContext2D.save":{title:"CanvasRenderingContext2D.save()",description:"是 Canvas 2D API 通过将当前状态放入栈中，保存 canvas 全部状态的方法<deCode>",deCode:["void ctx.save();"],caseCode:{"保存":'ctx.fillStyle="#a1d1d1";\n\nctx.save();\nctx.fillStyle = "green";\nctx.fillRect(10, 10, 100, 100);\n\nctx.restore(); // 还原到上次保存的默认状态\nctx.fillRect(150, 75, 100, 100);'}},"CanvasRenderingContext2D.restore":{title:"CanvasRenderingContext2D.restore()",description:"Canvas 2D API 通过在绘图状态栈中弹出顶端的状态，将 canvas 恢复到最近的保存状态的方法。 如果没有保存状态，此方法不做任何改变<deCode>",deCode:["void ctx.restore();"],caseCode:{"保存":'ctx.fillStyle="#a1d1d1";\n\nctx.save();\nctx.fillStyle = "green";\nctx.fillRect(10, 10, 100, 100);\n\nctx.restore(); // 还原到上次保存的默认状态\nctx.fillRect(150, 75, 100, 100);'}},"CanvasRenderingContext2D.canvas":{title:"CanvasRenderingContext2D.canvas",description:"canvas 属性是 Canvas API 的一部分，是对与给定上下文关联的HTMLCanvasElement对象的只读引用。如果没有 <canvas> 元素与之对应，对象值为null<deCode>",deCode:["ctx.canvas;"]}}},hvfH:function(e,t){},lH7g:function(e,t){},ncVE:function(e,t){},oAG2:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_exports__.a={name:"con",data:function(){return{showConsole:!1,clearb:!1,active:!1,animation:!1,showTxt:!1,clearT:0,clickTime:0,touches:{pageX:0,pageY:0},top:0,left:0}},methods:{oncrarr:function oncrarr(){var str=this.$refs.console_crarr.value,li=document.createElement("li"),main=document.getElementById("console_main");this.$refs.console_crarr.value="";var f=eval(str);li.innerHTML='<div class="console-erruri">'+str+'</div><div class="console-errmsg">&gt;&gt;'+eval(str)+"</div>",main&&main.prepend(li)},start:function(){this.clickTime=new Date},move:function(e){e.currentTarget;var t=e.touches;if(!this.active)if(this.touches.pageX&&this.touches.pageY){if(new Date-this.clickTime>200){var n=parseFloat(this.top)-(this.touches.pageY-t[0].pageY),a=parseFloat(this.left)-(this.touches.pageX-t[0].pageX);this.top=n+"px",this.left=a+"px",this.touches=t[0]}}else this.touches=t[0]},end:function(){var e=this;this.touches={pageX:0,pageY:0},new Date-this.clickTime>200||this.animation||(clearTimeout(this.clearT),this.active?(this.animation=!0,this.showTxt=!1,this.clearT=setTimeout(function(){e.active=!1,e.clearb=!1,e.$refs.box_t.className="blueball1 block",e.$refs.box_b.className="blueball2 block",e.animation=!1},800),this.$refs.box_t.className="blueball1 block animation3",this.$refs.box_b.className="blueball2 block animation4"):(this.active=!0,this.clearb=!0,this.animation=!0,this.clearT=setTimeout(function(){e.animation=!1,e.showTxt=!0},800),this.$refs.box_t.className="blueball1 block animation1",this.$refs.box_b.className="blueball2 block animation2"))}}}},q1kv:function(e,t){},sqrW:function(e,t){},uwWX:function(module,__webpack_exports__,__webpack_require__){"use strict";var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys__=__webpack_require__("ZLEe"),__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys__),__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_json_stringify__=__webpack_require__("3cXf"),__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_json_stringify___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_json_stringify__),__WEBPACK_IMPORTED_MODULE_2_underscore__=__webpack_require__("jMcx"),__WEBPACK_IMPORTED_MODULE_2_underscore___default=__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_underscore__),__WEBPACK_IMPORTED_MODULE_3__js_canvasJson__=__webpack_require__("hrFd");__webpack_exports__.a={name:"CanvasComponent",props:["setHead"],data:function(){return{obj:{},deCode:[],caseCode:""}},mounted:function(){this.obj=__WEBPACK_IMPORTED_MODULE_3__js_canvasJson__.a.HTMLCanvasElement,this.deCode=__WEBPACK_IMPORTED_MODULE_2_underscore___default.a.clone(__WEBPACK_IMPORTED_MODULE_3__js_canvasJson__.a.HTMLCanvasElement.deCode,{}),this.setHead({msg:"Canvas Api"})},methods:{showJson:function(){console.log(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_json_stringify___default()(this.$refs.textarea.value))},back:function(){var e=this.obj.title.split(".")[0];e=e==this.obj.title?"HTMLCanvasElement":e,this.caseCode="";this.$refs.picture.getContext("2d");this.$refs.picture.height=150,this.next(e)},next:function(e){var t=this;this.obj=__WEBPACK_IMPORTED_MODULE_3__js_canvasJson__.a[e],this.deCode=__WEBPACK_IMPORTED_MODULE_2_underscore___default.a.clone(__WEBPACK_IMPORTED_MODULE_3__js_canvasJson__.a[e].deCode,{});var n=this.obj.description;this.obj.description="",this.caseCode=this.obj.caseCode&&this.obj.caseCode[__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default()(this.obj.caseCode)[0]],this.$nextTick(function(){t.obj.description=n,t.start()})},start:function start(){this.$refs.picture.height=150;var canvas=document.getElementById("picture"),ctx=canvas.getContext("2d");eval(this.$refs.textarea.value)}},directives:{preCode:{inserted:function(e,t){var n=t.value.description.split("<deCode>"),a="";for(var i in n)n[i]=n[i].replace(/</g,"&lt;"),a+="<p>"+n[i]+"</p>",i<n.length-1&&(a+='<pre class="canvas-pre">'+t.value.deCode.pop().replace(/</g,"&lt;")+"</pre>");e.innerHTML=a}}}}},"v+cG":function(e,t){}},["NHnr"]);
//# sourceMappingURL=app.d26df3ab47ac64abf2c0.js.map